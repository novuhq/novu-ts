/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

<<<<<<< Updated upstream
import { subscribersAuthenticationChatAccessOauth } from "../funcs/subscribersAuthenticationChatAccessOauth.js";
import { subscribersAuthenticationChatAccessOauthCallBack } from "../funcs/subscribersAuthenticationChatAccessOauthCallBack.js";
=======
import { subscribersAuthenticationHandleOauth } from "../funcs/subscribersAuthenticationHandleOauth.js";
import { subscribersAuthenticationHandleOauthCallback } from "../funcs/subscribersAuthenticationHandleOauthCallback.js";
>>>>>>> Stashed changes
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Authentication extends ClientSDK {
  /**
   * Handle chat oauth
   */
<<<<<<< Updated upstream
  async chatAccessOauth(
    request: operations.SubscribersControllerChatAccessOauthRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(subscribersAuthenticationChatAccessOauth(
=======
  async handleOauth(
    request: operations.SubscribersControllerChatAccessOauthRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(subscribersAuthenticationHandleOauth(
>>>>>>> Stashed changes
      this,
      request,
      options,
    ));
  }

  /**
   * Handle providers oauth redirect
   */
<<<<<<< Updated upstream
  async chatAccessOauthCallBack(
    request: operations.SubscribersControllerChatOauthCallbackRequest,
    options?: RequestOptions,
  ): Promise<operations.SubscribersControllerChatOauthCallbackResponseBody> {
    return unwrapAsync(subscribersAuthenticationChatAccessOauthCallBack(
=======
  async handleOauthCallback(
    request: operations.SubscribersControllerChatOauthCallbackRequest,
    options?: RequestOptions,
  ): Promise<operations.SubscribersControllerChatOauthCallbackResponseBody> {
    return unwrapAsync(subscribersAuthenticationHandleOauthCallback(
>>>>>>> Stashed changes
      this,
      request,
      options,
    ));
  }
}
