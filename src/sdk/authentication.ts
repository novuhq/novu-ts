/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { subscribersAuthenticationChatAccessOauth } from "../funcs/subscribersAuthenticationChatAccessOauth.js";
import {
  ChatAccessOauthCallBackAcceptEnum,
  subscribersAuthenticationChatAccessOauthCallBack,
} from "../funcs/subscribersAuthenticationChatAccessOauthCallBack.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { ChatAccessOauthCallBackAcceptEnum } from "../funcs/subscribersAuthenticationChatAccessOauthCallBack.js";

export class Authentication extends ClientSDK {
  /**
   * Handle providers oauth redirect
   */
  async chatAccessOauthCallBack(
    request: operations.SubscribersV1ControllerChatOauthCallbackRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: ChatAccessOauthCallBackAcceptEnum;
    },
  ): Promise<operations.SubscribersV1ControllerChatOauthCallbackResponse> {
    return unwrapAsync(subscribersAuthenticationChatAccessOauthCallBack(
      this,
      request,
      options,
    ));
  }

  /**
   * Handle chat oauth
   */
  async chatAccessOauth(
    request: operations.SubscribersV1ControllerChatAccessOauthRequest,
    options?: RequestOptions,
  ): Promise<
    operations.SubscribersV1ControllerChatAccessOauthResponse | undefined
  > {
    return unwrapAsync(subscribersAuthenticationChatAccessOauth(
      this,
      request,
      options,
    ));
  }
}
