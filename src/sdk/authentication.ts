/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { subscribersAuthenticationHandleOauth } from "../funcs/subscribersAuthenticationHandleOauth.js";
import { subscribersAuthenticationHandleOauthCallback } from "../funcs/subscribersAuthenticationHandleOauthCallback.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Authentication extends ClientSDK {
  /**
   * Handle providers oauth redirect
   */
  async handleOauthCallback(
    request: operations.SubscribersControllerChatOauthCallbackRequest,
    options?: RequestOptions,
  ): Promise<operations.SubscribersControllerChatOauthCallbackResponse> {
    return unwrapAsync(subscribersAuthenticationHandleOauthCallback(
      this,
      request,
      options,
    ));
  }

  /**
   * Handle chat oauth
   */
  async handleOauth(
    request: operations.SubscribersControllerChatAccessOauthRequest,
    options?: RequestOptions,
  ): Promise<
    operations.SubscribersControllerChatAccessOauthResponse | undefined
  > {
    return unwrapAsync(subscribersAuthenticationHandleOauth(
      this,
      request,
      options,
    ));
  }
}
