/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { notificationsList } from "../funcs/notificationsList.js";
import { notificationsRetrieve } from "../funcs/notificationsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Stats } from "./stats.js";

export class Notifications extends ClientSDK {
    private _stats?: Stats;
    get stats(): Stats {
        return (this._stats ??= new Stats(this.options$));
    }

    /**
     * Get notifications
     */
    async list(
        request: operations.NotificationsControllerListNotificationsRequest,
        options?: RequestOptions
    ): Promise<components.ActivitiesResponseDto> {
        return unwrapAsync(notificationsList(this, request, options));
    }

    /**
     * Get notification
     */
    async retrieve(
        notificationId: string,
        options?: RequestOptions
    ): Promise<components.ActivityNotificationResponseDto> {
        return unwrapAsync(notificationsRetrieve(this, notificationId, options));
    }
}
