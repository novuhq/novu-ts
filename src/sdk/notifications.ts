/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { notificationsList } from "../funcs/notificationsList.js";
import { notificationsRetrieve } from "../funcs/notificationsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Stats } from "./stats.js";

export class Notifications extends ClientSDK {
  private _stats?: Stats;
  get stats(): Stats {
    return (this._stats ??= new Stats(this._options));
  }

  /**
   * Get notifications
   */
  async list(
    request: operations.NotificationsControllerListNotificationsRequest,
    options?: RequestOptions,
  ): Promise<operations.NotificationsControllerListNotificationsResponse> {
    return unwrapAsync(notificationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get notification
   */
  async retrieve(
    notificationId: string,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.NotificationsControllerGetNotificationResponse> {
    return unwrapAsync(notificationsRetrieve(
      this,
      notificationId,
      idempotencyKey,
      options,
    ));
  }
}
