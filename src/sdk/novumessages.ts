/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { subscribersMessagesMarkAll } from "../funcs/subscribersMessagesMarkAll.js";
import { subscribersMessagesMarkAllAs } from "../funcs/subscribersMessagesMarkAllAs.js";
import { subscribersMessagesUpdateAsSeen } from "../funcs/subscribersMessagesUpdateAsSeen.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class NovuMessages extends ClientSDK {
  /**
   * Mark a subscriber messages as seen, read, unseen or unread
   */
  async markAllAs(
    messageMarkAsRequestDto: components.MessageMarkAsRequestDto,
    subscriberId: string,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.SubscribersV1ControllerMarkMessagesAsResponse> {
    return unwrapAsync(subscribersMessagesMarkAllAs(
      this,
      messageMarkAsRequestDto,
      subscriberId,
      idempotencyKey,
      options,
    ));
  }

  /**
   * Marks all the subscriber messages as read, unread, seen or unseen. Optionally you can pass feed id (or array) to mark messages of a particular feed.
   */
  async markAll(
    markAllMessageAsRequestDto: components.MarkAllMessageAsRequestDto,
    subscriberId: string,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.SubscribersV1ControllerMarkAllUnreadAsReadResponse> {
    return unwrapAsync(subscribersMessagesMarkAll(
      this,
      markAllMessageAsRequestDto,
      subscriberId,
      idempotencyKey,
      options,
    ));
  }

  /**
   * Mark message action as seen
   */
  async updateAsSeen(
    request: operations.SubscribersV1ControllerMarkActionAsSeenRequest,
    options?: RequestOptions,
  ): Promise<operations.SubscribersV1ControllerMarkActionAsSeenResponse> {
    return unwrapAsync(subscribersMessagesUpdateAsSeen(
      this,
      request,
      options,
    ));
  }
}
