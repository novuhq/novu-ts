/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { translationsMasterImport } from "../funcs/translationsMasterImport.js";
import { translationsMasterRetrieve } from "../funcs/translationsMasterRetrieve.js";
import { translationsMasterUpload } from "../funcs/translationsMasterUpload.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Master extends ClientSDK {
  /**
   * Retrieve master translations JSON
   *
   * @remarks
   * Retrieve all translations for a locale in master JSON format organized by resourceId (workflowId)
   */
  async retrieve(
    locale?: string | undefined,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.GetMasterJsonResponseDto> {
    return unwrapAsync(translationsMasterRetrieve(
      this,
      locale,
      idempotencyKey,
      options,
    ));
  }

  /**
   * Import master translations JSON
   *
   * @remarks
   * Import translations for multiple workflows from master JSON format for a specific locale
   */
  async import(
    importMasterJsonRequestDto: components.ImportMasterJsonRequestDto,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.ImportMasterJsonResponseDto> {
    return unwrapAsync(translationsMasterImport(
      this,
      importMasterJsonRequestDto,
      idempotencyKey,
      options,
    ));
  }

  /**
   * Upload master translations JSON file
   *
   * @remarks
   * Upload a master JSON file containing translations for multiple workflows. Locale is automatically detected from filename (e.g., en_US.json)
   */
  async upload(
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.ImportMasterJsonResponseDto> {
    return unwrapAsync(translationsMasterUpload(
      this,
      idempotencyKey,
      options,
    ));
  }
}
