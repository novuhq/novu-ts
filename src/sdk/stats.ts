/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

<<<<<<< Updated upstream
import { notificationsStatsGraph } from "../funcs/notificationsStatsGraph.js";
import { notificationsStatsRetrieve } from "../funcs/notificationsStatsRetrieve.js";
=======
import { notificationsStatsGet } from "../funcs/notificationsStatsGet.js";
>>>>>>> Stashed changes
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Stats extends ClientSDK {
  /**
<<<<<<< Updated upstream
   * Get notification graph statistics
   */
  async graph(
    days?: number | undefined,
    options?: RequestOptions,
  ): Promise<Array<components.ActivityGraphStatesResponse>> {
    return unwrapAsync(notificationsStatsGraph(
      this,
      days,
      options,
    ));
  }

  /**
   * Get notification statistics
   */
  async retrieve(
    options?: RequestOptions,
  ): Promise<components.ActivityStatsResponseDto> {
    return unwrapAsync(notificationsStatsRetrieve(
=======
   * Get notification statistics
   */
  async get(
    options?: RequestOptions,
  ): Promise<components.ActivityStatsResponseDto> {
    return unwrapAsync(notificationsStatsGet(
>>>>>>> Stashed changes
      this,
      options,
    ));
  }
}
