/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentsGetAll } from "../funcs/environmentsGetAll.js";
import { environmentsGetCurrent } from "../funcs/environmentsGetCurrent.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { ApiKeys } from "./apikeys.js";

export class Environments extends ClientSDK {
  private _apiKeys?: ApiKeys;
  get apiKeys(): ApiKeys {
    return (this._apiKeys ??= new ApiKeys(this._options));
  }

  /**
   * Get current environment
   */
  async getCurrent(
    options?: RequestOptions,
  ): Promise<operations.EnvironmentsControllerV1GetCurrentEnvironmentResponse> {
    return unwrapAsync(environmentsGetCurrent(
      this,
      options,
    ));
  }

  /**
   * Get environments
   */
  async getAll(
    options?: RequestOptions,
  ): Promise<operations.EnvironmentsControllerV1ListMyEnvironmentsResponse> {
    return unwrapAsync(environmentsGetAll(
      this,
      options,
    ));
  }
}
