/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentsList } from "../funcs/environmentsList.js";
import { environmentsRetrieve } from "../funcs/environmentsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { ApiKeys } from "./apikeys.js";

export class Environments extends ClientSDK {
    private _apiKeys?: ApiKeys;
    get apiKeys(): ApiKeys {
        return (this._apiKeys ??= new ApiKeys(this.options$));
    }

    /**
     * Get environments
     */
    async list(options?: RequestOptions): Promise<Array<components.EnvironmentResponseDto>> {
        return unwrapAsync(environmentsList(this, options));
    }

    /**
     * Get current environment
     */
    async retrieve(options?: RequestOptions): Promise<components.EnvironmentResponseDto> {
        return unwrapAsync(environmentsRetrieve(this, options));
    }
}
