/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { adminGenerateRandomNumber } from "../funcs/adminGenerateRandomNumber.js";
import { adminHealthControllerHealthCheck } from "../funcs/adminHealthControllerHealthCheck.js";
import { adminTestIdempotency } from "../funcs/adminTestIdempotency.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Admin extends ClientSDK {
  async healthControllerHealthCheck(
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.HealthControllerHealthCheckResponseBody> {
    return unwrapAsync(adminHealthControllerHealthCheck(
      this,
      idempotencyKey,
      options,
    ));
  }

  async testIdempotency(
    idempotencyTestingDto: components.IdempotencyTestingDto,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.HealthControllerTestIdempotencyResponse> {
    return unwrapAsync(adminTestIdempotency(
      this,
      idempotencyTestingDto,
      idempotencyKey,
      options,
    ));
  }

  async generateRandomNumber(
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.HealthControllerGenerateRandomNumberResponse> {
    return unwrapAsync(adminGenerateRandomNumber(
      this,
      idempotencyKey,
      options,
    ));
  }
}
