/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { layoutsUpdate } from "../../funcs/layoutsUpdate.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  updateLayoutDto: components.UpdateLayoutDto$inboundSchema,
  layoutId: z.string(),
  idempotencyKey: z.string().optional(),
};

export const tool$layoutsUpdate: ToolDefinition<typeof args> = {
  name: "layouts-update",
  description: `Update a layout

Updates the details of an existing layout, here **layoutId** is the identifier of the layout`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await layoutsUpdate(
      client,
      args.updateLayoutDto,
      args.layoutId,
      args.idempotencyKey,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};
