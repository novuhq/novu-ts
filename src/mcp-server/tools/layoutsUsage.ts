/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { layoutsUsage } from "../../funcs/layoutsUsage.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  layoutId: z.string(),
  idempotencyKey: z.string().optional(),
};

export const tool$layoutsUsage: ToolDefinition<typeof args> = {
  name: "layouts-usage",
  description: `Get layout usage

Retrieves information about workflows that use the specified layout by its unique identifier **layoutId**`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await layoutsUsage(
      client,
      args.layoutId,
      args.idempotencyKey,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value.result;

    return formatResult(value, apiCall);
  },
};
