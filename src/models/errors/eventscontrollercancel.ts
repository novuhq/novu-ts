/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

/**
 * Not Found
 */
export type EventsControllerCancelResponseResponseBodyData = {
  data?: components.ErrorDto | undefined;
};

/**
 * Not Found
 */
export class EventsControllerCancelResponseResponseBody extends Error {
  data?: components.ErrorDto | undefined;

  /** The original data that was passed to this error instance. */
  data$: EventsControllerCancelResponseResponseBodyData;

  constructor(err: EventsControllerCancelResponseResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.data != null) this.data = err.data;

    this.name = "EventsControllerCancelResponseResponseBody";
  }
}

/**
 * Bad Request
 */
export type EventsControllerCancelResponseBodyData = {
  data?: components.ErrorDto | undefined;
};

/**
 * Bad Request
 */
export class EventsControllerCancelResponseBody extends Error {
  data?: components.ErrorDto | undefined;

  /** The original data that was passed to this error instance. */
  data$: EventsControllerCancelResponseBodyData;

  constructor(err: EventsControllerCancelResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.data != null) this.data = err.data;

    this.name = "EventsControllerCancelResponseBody";
  }
}

/** @internal */
export const EventsControllerCancelResponseResponseBody$inboundSchema:
  z.ZodType<EventsControllerCancelResponseResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      data: components.ErrorDto$inboundSchema.optional(),
    })
      .transform((v) => {
        return new EventsControllerCancelResponseResponseBody(v);
      });

/** @internal */
export type EventsControllerCancelResponseResponseBody$Outbound = {
  data?: components.ErrorDto$Outbound | undefined;
};

/** @internal */
export const EventsControllerCancelResponseResponseBody$outboundSchema:
  z.ZodType<
    EventsControllerCancelResponseResponseBody$Outbound,
    z.ZodTypeDef,
    EventsControllerCancelResponseResponseBody
  > = z.instanceof(EventsControllerCancelResponseResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      data: components.ErrorDto$outboundSchema.optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventsControllerCancelResponseResponseBody$ {
  /** @deprecated use `EventsControllerCancelResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EventsControllerCancelResponseResponseBody$inboundSchema;
  /** @deprecated use `EventsControllerCancelResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EventsControllerCancelResponseResponseBody$outboundSchema;
  /** @deprecated use `EventsControllerCancelResponseResponseBody$Outbound` instead. */
  export type Outbound = EventsControllerCancelResponseResponseBody$Outbound;
}

/** @internal */
export const EventsControllerCancelResponseBody$inboundSchema: z.ZodType<
  EventsControllerCancelResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: components.ErrorDto$inboundSchema.optional(),
})
  .transform((v) => {
    return new EventsControllerCancelResponseBody(v);
  });

/** @internal */
export type EventsControllerCancelResponseBody$Outbound = {
  data?: components.ErrorDto$Outbound | undefined;
};

/** @internal */
export const EventsControllerCancelResponseBody$outboundSchema: z.ZodType<
  EventsControllerCancelResponseBody$Outbound,
  z.ZodTypeDef,
  EventsControllerCancelResponseBody
> = z.instanceof(EventsControllerCancelResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    data: components.ErrorDto$outboundSchema.optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventsControllerCancelResponseBody$ {
  /** @deprecated use `EventsControllerCancelResponseBody$inboundSchema` instead. */
  export const inboundSchema = EventsControllerCancelResponseBody$inboundSchema;
  /** @deprecated use `EventsControllerCancelResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EventsControllerCancelResponseBody$outboundSchema;
  /** @deprecated use `EventsControllerCancelResponseBody$Outbound` instead. */
  export type Outbound = EventsControllerCancelResponseBody$Outbound;
}
