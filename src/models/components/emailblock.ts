/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    EmailBlockStyles,
    EmailBlockStyles$inboundSchema,
    EmailBlockStyles$Outbound,
    EmailBlockStyles$outboundSchema,
} from "./emailblockstyles.js";
import * as z from "zod";

export const EmailBlockType = {
    Button: "button",
    Text: "text",
} as const;
export type EmailBlockType = ClosedEnum<typeof EmailBlockType>;

export type EmailBlock = {
    content: string;
    styles?: EmailBlockStyles | undefined;
    type: EmailBlockType;
    url?: string | undefined;
};

/** @internal */
export const EmailBlockType$inboundSchema: z.ZodNativeEnum<typeof EmailBlockType> =
    z.nativeEnum(EmailBlockType);

/** @internal */
export const EmailBlockType$outboundSchema: z.ZodNativeEnum<typeof EmailBlockType> =
    EmailBlockType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmailBlockType$ {
    /** @deprecated use `EmailBlockType$inboundSchema` instead. */
    export const inboundSchema = EmailBlockType$inboundSchema;
    /** @deprecated use `EmailBlockType$outboundSchema` instead. */
    export const outboundSchema = EmailBlockType$outboundSchema;
}

/** @internal */
export const EmailBlock$inboundSchema: z.ZodType<EmailBlock, z.ZodTypeDef, unknown> = z.object({
    content: z.string(),
    styles: EmailBlockStyles$inboundSchema.optional(),
    type: EmailBlockType$inboundSchema,
    url: z.string().optional(),
});

/** @internal */
export type EmailBlock$Outbound = {
    content: string;
    styles?: EmailBlockStyles$Outbound | undefined;
    type: string;
    url?: string | undefined;
};

/** @internal */
export const EmailBlock$outboundSchema: z.ZodType<EmailBlock$Outbound, z.ZodTypeDef, EmailBlock> =
    z.object({
        content: z.string(),
        styles: EmailBlockStyles$outboundSchema.optional(),
        type: EmailBlockType$outboundSchema,
        url: z.string().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmailBlock$ {
    /** @deprecated use `EmailBlock$inboundSchema` instead. */
    export const inboundSchema = EmailBlock$inboundSchema;
    /** @deprecated use `EmailBlock$outboundSchema` instead. */
    export const outboundSchema = EmailBlock$outboundSchema;
    /** @deprecated use `EmailBlock$Outbound` instead. */
    export type Outbound = EmailBlock$Outbound;
}
