/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Message action payload
 */
export type Payload = {};

/**
 * Message action status
 */
export const MarkMessageActionAsSeenDtoStatus = {
    Pending: "pending",
    Done: "done",
} as const;
/**
 * Message action status
 */
export type MarkMessageActionAsSeenDtoStatus = ClosedEnum<typeof MarkMessageActionAsSeenDtoStatus>;

export type MarkMessageActionAsSeenDto = {
    /**
     * Message action payload
     */
    payload?: Payload | undefined;
    /**
     * Message action status
     */
    status: MarkMessageActionAsSeenDtoStatus;
};

/** @internal */
export const Payload$inboundSchema: z.ZodType<Payload, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Payload$Outbound = {};

/** @internal */
export const Payload$outboundSchema: z.ZodType<Payload$Outbound, z.ZodTypeDef, Payload> = z.object(
    {}
);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Payload$ {
    /** @deprecated use `Payload$inboundSchema` instead. */
    export const inboundSchema = Payload$inboundSchema;
    /** @deprecated use `Payload$outboundSchema` instead. */
    export const outboundSchema = Payload$outboundSchema;
    /** @deprecated use `Payload$Outbound` instead. */
    export type Outbound = Payload$Outbound;
}

/** @internal */
export const MarkMessageActionAsSeenDtoStatus$inboundSchema: z.ZodNativeEnum<
    typeof MarkMessageActionAsSeenDtoStatus
> = z.nativeEnum(MarkMessageActionAsSeenDtoStatus);

/** @internal */
export const MarkMessageActionAsSeenDtoStatus$outboundSchema: z.ZodNativeEnum<
    typeof MarkMessageActionAsSeenDtoStatus
> = MarkMessageActionAsSeenDtoStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarkMessageActionAsSeenDtoStatus$ {
    /** @deprecated use `MarkMessageActionAsSeenDtoStatus$inboundSchema` instead. */
    export const inboundSchema = MarkMessageActionAsSeenDtoStatus$inboundSchema;
    /** @deprecated use `MarkMessageActionAsSeenDtoStatus$outboundSchema` instead. */
    export const outboundSchema = MarkMessageActionAsSeenDtoStatus$outboundSchema;
}

/** @internal */
export const MarkMessageActionAsSeenDto$inboundSchema: z.ZodType<
    MarkMessageActionAsSeenDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    payload: z.lazy(() => Payload$inboundSchema).optional(),
    status: MarkMessageActionAsSeenDtoStatus$inboundSchema,
});

/** @internal */
export type MarkMessageActionAsSeenDto$Outbound = {
    payload?: Payload$Outbound | undefined;
    status: string;
};

/** @internal */
export const MarkMessageActionAsSeenDto$outboundSchema: z.ZodType<
    MarkMessageActionAsSeenDto$Outbound,
    z.ZodTypeDef,
    MarkMessageActionAsSeenDto
> = z.object({
    payload: z.lazy(() => Payload$outboundSchema).optional(),
    status: MarkMessageActionAsSeenDtoStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarkMessageActionAsSeenDto$ {
    /** @deprecated use `MarkMessageActionAsSeenDto$inboundSchema` instead. */
    export const inboundSchema = MarkMessageActionAsSeenDto$inboundSchema;
    /** @deprecated use `MarkMessageActionAsSeenDto$outboundSchema` instead. */
    export const outboundSchema = MarkMessageActionAsSeenDto$outboundSchema;
    /** @deprecated use `MarkMessageActionAsSeenDto$Outbound` instead. */
    export type Outbound = MarkMessageActionAsSeenDto$Outbound;
}
