/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StepIssuesDto,
  StepIssuesDto$inboundSchema,
  StepIssuesDto$Outbound,
  StepIssuesDto$outboundSchema,
} from "./stepissuesdto.js";
import {
  StepTypeEnum,
  StepTypeEnum$inboundSchema,
  StepTypeEnum$outboundSchema,
} from "./steptypeenum.js";

export type StepListResponseDto = {
  /**
   * Slug of the step
   */
  slug: string;
  /**
   * Type of the step
   */
  type: StepTypeEnum;
  /**
   * Issues associated with the step
   */
  issues?: StepIssuesDto | undefined;
};

/** @internal */
export const StepListResponseDto$inboundSchema: z.ZodType<
  StepListResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  slug: z.string(),
  type: StepTypeEnum$inboundSchema,
  issues: StepIssuesDto$inboundSchema.optional(),
});

/** @internal */
export type StepListResponseDto$Outbound = {
  slug: string;
  type: string;
  issues?: StepIssuesDto$Outbound | undefined;
};

/** @internal */
export const StepListResponseDto$outboundSchema: z.ZodType<
  StepListResponseDto$Outbound,
  z.ZodTypeDef,
  StepListResponseDto
> = z.object({
  slug: z.string(),
  type: StepTypeEnum$outboundSchema,
  issues: StepIssuesDto$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StepListResponseDto$ {
  /** @deprecated use `StepListResponseDto$inboundSchema` instead. */
  export const inboundSchema = StepListResponseDto$inboundSchema;
  /** @deprecated use `StepListResponseDto$outboundSchema` instead. */
  export const outboundSchema = StepListResponseDto$outboundSchema;
  /** @deprecated use `StepListResponseDto$Outbound` instead. */
  export type Outbound = StepListResponseDto$Outbound;
}

export function stepListResponseDtoToJSON(
  stepListResponseDto: StepListResponseDto,
): string {
  return JSON.stringify(
    StepListResponseDto$outboundSchema.parse(stepListResponseDto),
  );
}

export function stepListResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<StepListResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StepListResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StepListResponseDto' from JSON`,
  );
}
