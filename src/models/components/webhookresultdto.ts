/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EventBody,
  EventBody$inboundSchema,
  EventBody$Outbound,
  EventBody$outboundSchema,
} from "./eventbody.js";

export type WebhookResultDto = {
  /**
   * Unique identifier for the webhook result
   */
  id: string;
  /**
   * Event body containing the webhook event data
   */
  event: EventBody;
};

/** @internal */
export const WebhookResultDto$inboundSchema: z.ZodType<
  WebhookResultDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  event: EventBody$inboundSchema,
});

/** @internal */
export type WebhookResultDto$Outbound = {
  id: string;
  event: EventBody$Outbound;
};

/** @internal */
export const WebhookResultDto$outboundSchema: z.ZodType<
  WebhookResultDto$Outbound,
  z.ZodTypeDef,
  WebhookResultDto
> = z.object({
  id: z.string(),
  event: EventBody$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookResultDto$ {
  /** @deprecated use `WebhookResultDto$inboundSchema` instead. */
  export const inboundSchema = WebhookResultDto$inboundSchema;
  /** @deprecated use `WebhookResultDto$outboundSchema` instead. */
  export const outboundSchema = WebhookResultDto$outboundSchema;
  /** @deprecated use `WebhookResultDto$Outbound` instead. */
  export type Outbound = WebhookResultDto$Outbound;
}

export function webhookResultDtoToJSON(
  webhookResultDto: WebhookResultDto,
): string {
  return JSON.stringify(
    WebhookResultDto$outboundSchema.parse(webhookResultDto),
  );
}

export function webhookResultDtoFromJSON(
  jsonString: string,
): SafeParseResult<WebhookResultDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookResultDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookResultDto' from JSON`,
  );
}
