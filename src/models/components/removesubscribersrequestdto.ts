/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RemoveSubscribersRequestDto = {
  /**
   * List of subscriber identifiers that will be removed to the topic
   */
  subscribers: Array<string>;
};

/** @internal */
export const RemoveSubscribersRequestDto$inboundSchema: z.ZodType<
  RemoveSubscribersRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  subscribers: z.array(z.string()),
});

/** @internal */
export type RemoveSubscribersRequestDto$Outbound = {
  subscribers: Array<string>;
};

/** @internal */
export const RemoveSubscribersRequestDto$outboundSchema: z.ZodType<
  RemoveSubscribersRequestDto$Outbound,
  z.ZodTypeDef,
  RemoveSubscribersRequestDto
> = z.object({
  subscribers: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveSubscribersRequestDto$ {
  /** @deprecated use `RemoveSubscribersRequestDto$inboundSchema` instead. */
  export const inboundSchema = RemoveSubscribersRequestDto$inboundSchema;
  /** @deprecated use `RemoveSubscribersRequestDto$outboundSchema` instead. */
  export const outboundSchema = RemoveSubscribersRequestDto$outboundSchema;
  /** @deprecated use `RemoveSubscribersRequestDto$Outbound` instead. */
  export type Outbound = RemoveSubscribersRequestDto$Outbound;
}

export function removeSubscribersRequestDtoToJSON(
  removeSubscribersRequestDto: RemoveSubscribersRequestDto,
): string {
  return JSON.stringify(
    RemoveSubscribersRequestDto$outboundSchema.parse(
      removeSubscribersRequestDto,
    ),
  );
}

export function removeSubscribersRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<RemoveSubscribersRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveSubscribersRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveSubscribersRequestDto' from JSON`,
  );
}
