/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Unit of time for the look-back window.
 */
export const Unit = {
  Seconds: "seconds",
  Minutes: "minutes",
  Hours: "hours",
  Days: "days",
  Weeks: "weeks",
  Months: "months",
} as const;
/**
 * Unit of time for the look-back window.
 */
export type Unit = ClosedEnum<typeof Unit>;

export type LookBackWindowDto = {
  /**
   * Amount of time for the look-back window.
   */
  amount: number;
  /**
   * Unit of time for the look-back window.
   */
  unit: Unit;
};

/** @internal */
export const Unit$inboundSchema: z.ZodNativeEnum<typeof Unit> = z.nativeEnum(
  Unit,
);

/** @internal */
export const Unit$outboundSchema: z.ZodNativeEnum<typeof Unit> =
  Unit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Unit$ {
  /** @deprecated use `Unit$inboundSchema` instead. */
  export const inboundSchema = Unit$inboundSchema;
  /** @deprecated use `Unit$outboundSchema` instead. */
  export const outboundSchema = Unit$outboundSchema;
}

/** @internal */
export const LookBackWindowDto$inboundSchema: z.ZodType<
  LookBackWindowDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number(),
  unit: Unit$inboundSchema,
});

/** @internal */
export type LookBackWindowDto$Outbound = {
  amount: number;
  unit: string;
};

/** @internal */
export const LookBackWindowDto$outboundSchema: z.ZodType<
  LookBackWindowDto$Outbound,
  z.ZodTypeDef,
  LookBackWindowDto
> = z.object({
  amount: z.number(),
  unit: Unit$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LookBackWindowDto$ {
  /** @deprecated use `LookBackWindowDto$inboundSchema` instead. */
  export const inboundSchema = LookBackWindowDto$inboundSchema;
  /** @deprecated use `LookBackWindowDto$outboundSchema` instead. */
  export const outboundSchema = LookBackWindowDto$outboundSchema;
  /** @deprecated use `LookBackWindowDto$Outbound` instead. */
  export type Outbound = LookBackWindowDto$Outbound;
}

export function lookBackWindowDtoToJSON(
  lookBackWindowDto: LookBackWindowDto,
): string {
  return JSON.stringify(
    LookBackWindowDto$outboundSchema.parse(lookBackWindowDto),
  );
}

export function lookBackWindowDtoFromJSON(
  jsonString: string,
): SafeParseResult<LookBackWindowDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LookBackWindowDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LookBackWindowDto' from JSON`,
  );
}
