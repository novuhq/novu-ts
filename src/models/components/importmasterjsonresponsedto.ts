/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ImportMasterJsonResponseDto = {
  /**
   * Overall success status of the import operation
   */
  success: boolean;
  /**
   * Human-readable message describing the import result
   */
  message: string;
  /**
   * List of resource IDs that were successfully imported
   */
  successful?: Array<string> | undefined;
  /**
   * List of resource IDs that failed to import
   */
  failed?: Array<string> | undefined;
};

/** @internal */
export const ImportMasterJsonResponseDto$inboundSchema: z.ZodType<
  ImportMasterJsonResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
  message: z.string(),
  successful: z.array(z.string()).optional(),
  failed: z.array(z.string()).optional(),
});

/** @internal */
export type ImportMasterJsonResponseDto$Outbound = {
  success: boolean;
  message: string;
  successful?: Array<string> | undefined;
  failed?: Array<string> | undefined;
};

/** @internal */
export const ImportMasterJsonResponseDto$outboundSchema: z.ZodType<
  ImportMasterJsonResponseDto$Outbound,
  z.ZodTypeDef,
  ImportMasterJsonResponseDto
> = z.object({
  success: z.boolean(),
  message: z.string(),
  successful: z.array(z.string()).optional(),
  failed: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImportMasterJsonResponseDto$ {
  /** @deprecated use `ImportMasterJsonResponseDto$inboundSchema` instead. */
  export const inboundSchema = ImportMasterJsonResponseDto$inboundSchema;
  /** @deprecated use `ImportMasterJsonResponseDto$outboundSchema` instead. */
  export const outboundSchema = ImportMasterJsonResponseDto$outboundSchema;
  /** @deprecated use `ImportMasterJsonResponseDto$Outbound` instead. */
  export type Outbound = ImportMasterJsonResponseDto$Outbound;
}

export function importMasterJsonResponseDtoToJSON(
  importMasterJsonResponseDto: ImportMasterJsonResponseDto,
): string {
  return JSON.stringify(
    ImportMasterJsonResponseDto$outboundSchema.parse(
      importMasterJsonResponseDto,
    ),
  );
}

export function importMasterJsonResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<ImportMasterJsonResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ImportMasterJsonResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ImportMasterJsonResponseDto' from JSON`,
  );
}
