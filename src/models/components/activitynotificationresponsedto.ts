/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
    ActivityNotificationSubscriberResponseDto,
    ActivityNotificationSubscriberResponseDto$inboundSchema,
    ActivityNotificationSubscriberResponseDto$Outbound,
    ActivityNotificationSubscriberResponseDto$outboundSchema,
} from "./activitynotificationsubscriberresponsedto.js";
import {
    ActivityNotificationTemplateResponseDto,
    ActivityNotificationTemplateResponseDto$inboundSchema,
    ActivityNotificationTemplateResponseDto$Outbound,
    ActivityNotificationTemplateResponseDto$outboundSchema,
} from "./activitynotificationtemplateresponsedto.js";
import * as z from "zod";

export const ActivityNotificationResponseDtoChannels = {
    InApp: "in_app",
    Email: "email",
    Sms: "sms",
    Chat: "chat",
    Push: "push",
    Digest: "digest",
    Trigger: "trigger",
    Delay: "delay",
    Custom: "custom",
} as const;
export type ActivityNotificationResponseDtoChannels = ClosedEnum<
    typeof ActivityNotificationResponseDtoChannels
>;

export type ActivityNotificationResponseDto = {
    environmentId: string;
    id?: string | undefined;
    organizationId: string;
    channels?: ActivityNotificationResponseDtoChannels | undefined;
    createdAt?: string | undefined;
    jobs?: Array<string> | undefined;
    subscriber?: ActivityNotificationSubscriberResponseDto | undefined;
    template?: ActivityNotificationTemplateResponseDto | undefined;
    transactionId: string;
};

/** @internal */
export const ActivityNotificationResponseDtoChannels$inboundSchema: z.ZodNativeEnum<
    typeof ActivityNotificationResponseDtoChannels
> = z.nativeEnum(ActivityNotificationResponseDtoChannels);

/** @internal */
export const ActivityNotificationResponseDtoChannels$outboundSchema: z.ZodNativeEnum<
    typeof ActivityNotificationResponseDtoChannels
> = ActivityNotificationResponseDtoChannels$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivityNotificationResponseDtoChannels$ {
    /** @deprecated use `ActivityNotificationResponseDtoChannels$inboundSchema` instead. */
    export const inboundSchema = ActivityNotificationResponseDtoChannels$inboundSchema;
    /** @deprecated use `ActivityNotificationResponseDtoChannels$outboundSchema` instead. */
    export const outboundSchema = ActivityNotificationResponseDtoChannels$outboundSchema;
}

/** @internal */
export const ActivityNotificationResponseDto$inboundSchema: z.ZodType<
    ActivityNotificationResponseDto,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        _environmentId: z.string(),
        _id: z.string().optional(),
        _organizationId: z.string(),
        channels: ActivityNotificationResponseDtoChannels$inboundSchema.optional(),
        createdAt: z.string().optional(),
        jobs: z.array(z.string()).optional(),
        subscriber: ActivityNotificationSubscriberResponseDto$inboundSchema.optional(),
        template: ActivityNotificationTemplateResponseDto$inboundSchema.optional(),
        transactionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            _environmentId: "environmentId",
            _id: "id",
            _organizationId: "organizationId",
        });
    });

/** @internal */
export type ActivityNotificationResponseDto$Outbound = {
    _environmentId: string;
    _id?: string | undefined;
    _organizationId: string;
    channels?: string | undefined;
    createdAt?: string | undefined;
    jobs?: Array<string> | undefined;
    subscriber?: ActivityNotificationSubscriberResponseDto$Outbound | undefined;
    template?: ActivityNotificationTemplateResponseDto$Outbound | undefined;
    transactionId: string;
};

/** @internal */
export const ActivityNotificationResponseDto$outboundSchema: z.ZodType<
    ActivityNotificationResponseDto$Outbound,
    z.ZodTypeDef,
    ActivityNotificationResponseDto
> = z
    .object({
        environmentId: z.string(),
        id: z.string().optional(),
        organizationId: z.string(),
        channels: ActivityNotificationResponseDtoChannels$outboundSchema.optional(),
        createdAt: z.string().optional(),
        jobs: z.array(z.string()).optional(),
        subscriber: ActivityNotificationSubscriberResponseDto$outboundSchema.optional(),
        template: ActivityNotificationTemplateResponseDto$outboundSchema.optional(),
        transactionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            environmentId: "_environmentId",
            id: "_id",
            organizationId: "_organizationId",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivityNotificationResponseDto$ {
    /** @deprecated use `ActivityNotificationResponseDto$inboundSchema` instead. */
    export const inboundSchema = ActivityNotificationResponseDto$inboundSchema;
    /** @deprecated use `ActivityNotificationResponseDto$outboundSchema` instead. */
    export const outboundSchema = ActivityNotificationResponseDto$outboundSchema;
    /** @deprecated use `ActivityNotificationResponseDto$Outbound` instead. */
    export type Outbound = ActivityNotificationResponseDto$Outbound;
}
