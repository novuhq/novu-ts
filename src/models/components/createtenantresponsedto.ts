/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CreateTenantResponseDtoData = {};

export type CreateTenantResponseDto = {
  environmentId: string;
  id: string;
  createdAt: string;
  data?: CreateTenantResponseDtoData | undefined;
  identifier: string;
  name?: string | undefined;
  updatedAt: string;
};

/** @internal */
export const CreateTenantResponseDtoData$inboundSchema: z.ZodType<
  CreateTenantResponseDtoData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateTenantResponseDtoData$Outbound = {};

/** @internal */
export const CreateTenantResponseDtoData$outboundSchema: z.ZodType<
  CreateTenantResponseDtoData$Outbound,
  z.ZodTypeDef,
  CreateTenantResponseDtoData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTenantResponseDtoData$ {
  /** @deprecated use `CreateTenantResponseDtoData$inboundSchema` instead. */
  export const inboundSchema = CreateTenantResponseDtoData$inboundSchema;
  /** @deprecated use `CreateTenantResponseDtoData$outboundSchema` instead. */
  export const outboundSchema = CreateTenantResponseDtoData$outboundSchema;
  /** @deprecated use `CreateTenantResponseDtoData$Outbound` instead. */
  export type Outbound = CreateTenantResponseDtoData$Outbound;
}

/** @internal */
export const CreateTenantResponseDto$inboundSchema: z.ZodType<
  CreateTenantResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  _environmentId: z.string(),
  _id: z.string(),
  createdAt: z.string(),
  data: z.lazy(() => CreateTenantResponseDtoData$inboundSchema).optional(),
  identifier: z.string(),
  name: z.string().optional(),
  updatedAt: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_environmentId": "environmentId",
    "_id": "id",
  });
});

/** @internal */
export type CreateTenantResponseDto$Outbound = {
  _environmentId: string;
  _id: string;
  createdAt: string;
  data?: CreateTenantResponseDtoData$Outbound | undefined;
  identifier: string;
  name?: string | undefined;
  updatedAt: string;
};

/** @internal */
export const CreateTenantResponseDto$outboundSchema: z.ZodType<
  CreateTenantResponseDto$Outbound,
  z.ZodTypeDef,
  CreateTenantResponseDto
> = z.object({
  environmentId: z.string(),
  id: z.string(),
  createdAt: z.string(),
  data: z.lazy(() => CreateTenantResponseDtoData$outboundSchema).optional(),
  identifier: z.string(),
  name: z.string().optional(),
  updatedAt: z.string(),
}).transform((v) => {
  return remap$(v, {
    environmentId: "_environmentId",
    id: "_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTenantResponseDto$ {
  /** @deprecated use `CreateTenantResponseDto$inboundSchema` instead. */
  export const inboundSchema = CreateTenantResponseDto$inboundSchema;
  /** @deprecated use `CreateTenantResponseDto$outboundSchema` instead. */
  export const outboundSchema = CreateTenantResponseDto$outboundSchema;
  /** @deprecated use `CreateTenantResponseDto$Outbound` instead. */
  export type Outbound = CreateTenantResponseDto$Outbound;
}
