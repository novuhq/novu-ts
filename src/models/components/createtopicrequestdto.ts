/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateTopicRequestDto = {
  /**
   * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
   */
  key: string;
  /**
   * User defined custom name and provided by the user that will name the Topic created.
   */
  name: string;
};

/** @internal */
export const CreateTopicRequestDto$inboundSchema: z.ZodType<
  CreateTopicRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  name: z.string(),
});

/** @internal */
export type CreateTopicRequestDto$Outbound = {
  key: string;
  name: string;
};

/** @internal */
export const CreateTopicRequestDto$outboundSchema: z.ZodType<
  CreateTopicRequestDto$Outbound,
  z.ZodTypeDef,
  CreateTopicRequestDto
> = z.object({
  key: z.string(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTopicRequestDto$ {
  /** @deprecated use `CreateTopicRequestDto$inboundSchema` instead. */
  export const inboundSchema = CreateTopicRequestDto$inboundSchema;
  /** @deprecated use `CreateTopicRequestDto$outboundSchema` instead. */
  export const outboundSchema = CreateTopicRequestDto$outboundSchema;
  /** @deprecated use `CreateTopicRequestDto$Outbound` instead. */
  export type Outbound = CreateTopicRequestDto$Outbound;
}

export function createTopicRequestDtoToJSON(
  createTopicRequestDto: CreateTopicRequestDto,
): string {
  return JSON.stringify(
    CreateTopicRequestDto$outboundSchema.parse(createTopicRequestDto),
  );
}

export function createTopicRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<CreateTopicRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTopicRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTopicRequestDto' from JSON`,
  );
}
