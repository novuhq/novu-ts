/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ChannelPreference,
    ChannelPreference$inboundSchema,
    ChannelPreference$Outbound,
    ChannelPreference$outboundSchema,
} from "./channelpreference.js";
import * as z from "zod";

export type UpdateSubscriberGlobalPreferencesRequestDto = {
    /**
     * Enable or disable the subscriber global preferences.
     */
    enabled?: boolean | undefined;
    /**
     * The subscriber global preferences for every ChannelTypeEnum.
     */
    preferences?: Array<ChannelPreference> | undefined;
};

/** @internal */
export const UpdateSubscriberGlobalPreferencesRequestDto$inboundSchema: z.ZodType<
    UpdateSubscriberGlobalPreferencesRequestDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    enabled: z.boolean().optional(),
    preferences: z.array(ChannelPreference$inboundSchema).optional(),
});

/** @internal */
export type UpdateSubscriberGlobalPreferencesRequestDto$Outbound = {
    enabled?: boolean | undefined;
    preferences?: Array<ChannelPreference$Outbound> | undefined;
};

/** @internal */
export const UpdateSubscriberGlobalPreferencesRequestDto$outboundSchema: z.ZodType<
    UpdateSubscriberGlobalPreferencesRequestDto$Outbound,
    z.ZodTypeDef,
    UpdateSubscriberGlobalPreferencesRequestDto
> = z.object({
    enabled: z.boolean().optional(),
    preferences: z.array(ChannelPreference$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSubscriberGlobalPreferencesRequestDto$ {
    /** @deprecated use `UpdateSubscriberGlobalPreferencesRequestDto$inboundSchema` instead. */
    export const inboundSchema = UpdateSubscriberGlobalPreferencesRequestDto$inboundSchema;
    /** @deprecated use `UpdateSubscriberGlobalPreferencesRequestDto$outboundSchema` instead. */
    export const outboundSchema = UpdateSubscriberGlobalPreferencesRequestDto$outboundSchema;
    /** @deprecated use `UpdateSubscriberGlobalPreferencesRequestDto$Outbound` instead. */
    export type Outbound = UpdateSubscriberGlobalPreferencesRequestDto$Outbound;
}
