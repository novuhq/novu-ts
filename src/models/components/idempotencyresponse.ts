/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IdempotencyResponse = {};

/** @internal */
export const IdempotencyResponse$inboundSchema: z.ZodType<
  IdempotencyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type IdempotencyResponse$Outbound = {};

/** @internal */
export const IdempotencyResponse$outboundSchema: z.ZodType<
  IdempotencyResponse$Outbound,
  z.ZodTypeDef,
  IdempotencyResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IdempotencyResponse$ {
  /** @deprecated use `IdempotencyResponse$inboundSchema` instead. */
  export const inboundSchema = IdempotencyResponse$inboundSchema;
  /** @deprecated use `IdempotencyResponse$outboundSchema` instead. */
  export const outboundSchema = IdempotencyResponse$outboundSchema;
  /** @deprecated use `IdempotencyResponse$Outbound` instead. */
  export type Outbound = IdempotencyResponse$Outbound;
}

export function idempotencyResponseToJSON(
  idempotencyResponse: IdempotencyResponse,
): string {
  return JSON.stringify(
    IdempotencyResponse$outboundSchema.parse(idempotencyResponse),
  );
}

export function idempotencyResponseFromJSON(
  jsonString: string,
): SafeParseResult<IdempotencyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IdempotencyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IdempotencyResponse' from JSON`,
  );
}
