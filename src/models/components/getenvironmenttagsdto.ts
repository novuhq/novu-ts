/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEnvironmentTagsDto = {
  name: string;
};

/** @internal */
export const GetEnvironmentTagsDto$inboundSchema: z.ZodType<
  GetEnvironmentTagsDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type GetEnvironmentTagsDto$Outbound = {
  name: string;
};

/** @internal */
export const GetEnvironmentTagsDto$outboundSchema: z.ZodType<
  GetEnvironmentTagsDto$Outbound,
  z.ZodTypeDef,
  GetEnvironmentTagsDto
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEnvironmentTagsDto$ {
  /** @deprecated use `GetEnvironmentTagsDto$inboundSchema` instead. */
  export const inboundSchema = GetEnvironmentTagsDto$inboundSchema;
  /** @deprecated use `GetEnvironmentTagsDto$outboundSchema` instead. */
  export const outboundSchema = GetEnvironmentTagsDto$outboundSchema;
  /** @deprecated use `GetEnvironmentTagsDto$Outbound` instead. */
  export type Outbound = GetEnvironmentTagsDto$Outbound;
}

export function getEnvironmentTagsDtoToJSON(
  getEnvironmentTagsDto: GetEnvironmentTagsDto,
): string {
  return JSON.stringify(
    GetEnvironmentTagsDto$outboundSchema.parse(getEnvironmentTagsDto),
  );
}

export function getEnvironmentTagsDtoFromJSON(
  jsonString: string,
): SafeParseResult<GetEnvironmentTagsDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEnvironmentTagsDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEnvironmentTagsDto' from JSON`,
  );
}
