/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Type of step content issue
 */
export const ContentIssueEnum = {
  IllegalVariableInControlValue: "ILLEGAL_VARIABLE_IN_CONTROL_VALUE",
  InvalidFilterArgInVariable: "INVALID_FILTER_ARG_IN_VARIABLE",
  MissingValue: "MISSING_VALUE",
  TierLimitExceeded: "TIER_LIMIT_EXCEEDED",
} as const;
/**
 * Type of step content issue
 */
export type ContentIssueEnum = ClosedEnum<typeof ContentIssueEnum>;

/** @internal */
export const ContentIssueEnum$inboundSchema: z.ZodNativeEnum<
  typeof ContentIssueEnum
> = z.nativeEnum(ContentIssueEnum);

/** @internal */
export const ContentIssueEnum$outboundSchema: z.ZodNativeEnum<
  typeof ContentIssueEnum
> = ContentIssueEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ContentIssueEnum$ {
  /** @deprecated use `ContentIssueEnum$inboundSchema` instead. */
  export const inboundSchema = ContentIssueEnum$inboundSchema;
  /** @deprecated use `ContentIssueEnum$outboundSchema` instead. */
  export const outboundSchema = ContentIssueEnum$outboundSchema;
}
