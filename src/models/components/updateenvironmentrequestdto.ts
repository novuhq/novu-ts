/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BridgeConfigurationDto,
  BridgeConfigurationDto$inboundSchema,
  BridgeConfigurationDto$Outbound,
  BridgeConfigurationDto$outboundSchema,
} from "./bridgeconfigurationdto.js";
import {
  InBoundParseDomainDto,
  InBoundParseDomainDto$inboundSchema,
  InBoundParseDomainDto$Outbound,
  InBoundParseDomainDto$outboundSchema,
} from "./inboundparsedomaindto.js";

export type UpdateEnvironmentRequestDto = {
  name?: string | undefined;
  identifier?: string | undefined;
  parentId?: string | undefined;
  color?: string | undefined;
  dns?: InBoundParseDomainDto | undefined;
  bridge?: BridgeConfigurationDto | undefined;
};

/** @internal */
export const UpdateEnvironmentRequestDto$inboundSchema: z.ZodType<
  UpdateEnvironmentRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  identifier: z.string().optional(),
  parentId: z.string().optional(),
  color: z.string().optional(),
  dns: InBoundParseDomainDto$inboundSchema.optional(),
  bridge: BridgeConfigurationDto$inboundSchema.optional(),
});

/** @internal */
export type UpdateEnvironmentRequestDto$Outbound = {
  name?: string | undefined;
  identifier?: string | undefined;
  parentId?: string | undefined;
  color?: string | undefined;
  dns?: InBoundParseDomainDto$Outbound | undefined;
  bridge?: BridgeConfigurationDto$Outbound | undefined;
};

/** @internal */
export const UpdateEnvironmentRequestDto$outboundSchema: z.ZodType<
  UpdateEnvironmentRequestDto$Outbound,
  z.ZodTypeDef,
  UpdateEnvironmentRequestDto
> = z.object({
  name: z.string().optional(),
  identifier: z.string().optional(),
  parentId: z.string().optional(),
  color: z.string().optional(),
  dns: InBoundParseDomainDto$outboundSchema.optional(),
  bridge: BridgeConfigurationDto$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEnvironmentRequestDto$ {
  /** @deprecated use `UpdateEnvironmentRequestDto$inboundSchema` instead. */
  export const inboundSchema = UpdateEnvironmentRequestDto$inboundSchema;
  /** @deprecated use `UpdateEnvironmentRequestDto$outboundSchema` instead. */
  export const outboundSchema = UpdateEnvironmentRequestDto$outboundSchema;
  /** @deprecated use `UpdateEnvironmentRequestDto$Outbound` instead. */
  export type Outbound = UpdateEnvironmentRequestDto$Outbound;
}

export function updateEnvironmentRequestDtoToJSON(
  updateEnvironmentRequestDto: UpdateEnvironmentRequestDto,
): string {
  return JSON.stringify(
    UpdateEnvironmentRequestDto$outboundSchema.parse(
      updateEnvironmentRequestDto,
    ),
  );
}

export function updateEnvironmentRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<UpdateEnvironmentRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateEnvironmentRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateEnvironmentRequestDto' from JSON`,
  );
}
