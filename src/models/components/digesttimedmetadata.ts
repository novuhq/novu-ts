/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    TimedConfig,
    TimedConfig$inboundSchema,
    TimedConfig$Outbound,
    TimedConfig$outboundSchema,
} from "./timedconfig.js";
import * as z from "zod";

export const DigestTimedMetadataType = {
    Timed: "timed",
} as const;
export type DigestTimedMetadataType = ClosedEnum<typeof DigestTimedMetadataType>;

export const DigestTimedMetadataUnit = {
    Seconds: "seconds",
    Minutes: "minutes",
    Hours: "hours",
    Days: "days",
    Weeks: "weeks",
    Months: "months",
} as const;
export type DigestTimedMetadataUnit = ClosedEnum<typeof DigestTimedMetadataUnit>;

export type DigestTimedMetadata = {
    amount?: number | undefined;
    digestKey?: string | undefined;
    timed?: TimedConfig | undefined;
    type: DigestTimedMetadataType;
    unit?: DigestTimedMetadataUnit | undefined;
};

/** @internal */
export const DigestTimedMetadataType$inboundSchema: z.ZodNativeEnum<
    typeof DigestTimedMetadataType
> = z.nativeEnum(DigestTimedMetadataType);

/** @internal */
export const DigestTimedMetadataType$outboundSchema: z.ZodNativeEnum<
    typeof DigestTimedMetadataType
> = DigestTimedMetadataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigestTimedMetadataType$ {
    /** @deprecated use `DigestTimedMetadataType$inboundSchema` instead. */
    export const inboundSchema = DigestTimedMetadataType$inboundSchema;
    /** @deprecated use `DigestTimedMetadataType$outboundSchema` instead. */
    export const outboundSchema = DigestTimedMetadataType$outboundSchema;
}

/** @internal */
export const DigestTimedMetadataUnit$inboundSchema: z.ZodNativeEnum<
    typeof DigestTimedMetadataUnit
> = z.nativeEnum(DigestTimedMetadataUnit);

/** @internal */
export const DigestTimedMetadataUnit$outboundSchema: z.ZodNativeEnum<
    typeof DigestTimedMetadataUnit
> = DigestTimedMetadataUnit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigestTimedMetadataUnit$ {
    /** @deprecated use `DigestTimedMetadataUnit$inboundSchema` instead. */
    export const inboundSchema = DigestTimedMetadataUnit$inboundSchema;
    /** @deprecated use `DigestTimedMetadataUnit$outboundSchema` instead. */
    export const outboundSchema = DigestTimedMetadataUnit$outboundSchema;
}

/** @internal */
export const DigestTimedMetadata$inboundSchema: z.ZodType<
    DigestTimedMetadata,
    z.ZodTypeDef,
    unknown
> = z.object({
    amount: z.number().optional(),
    digestKey: z.string().optional(),
    timed: TimedConfig$inboundSchema.optional(),
    type: DigestTimedMetadataType$inboundSchema,
    unit: DigestTimedMetadataUnit$inboundSchema.optional(),
});

/** @internal */
export type DigestTimedMetadata$Outbound = {
    amount?: number | undefined;
    digestKey?: string | undefined;
    timed?: TimedConfig$Outbound | undefined;
    type: string;
    unit?: string | undefined;
};

/** @internal */
export const DigestTimedMetadata$outboundSchema: z.ZodType<
    DigestTimedMetadata$Outbound,
    z.ZodTypeDef,
    DigestTimedMetadata
> = z.object({
    amount: z.number().optional(),
    digestKey: z.string().optional(),
    timed: TimedConfig$outboundSchema.optional(),
    type: DigestTimedMetadataType$outboundSchema,
    unit: DigestTimedMetadataUnit$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DigestTimedMetadata$ {
    /** @deprecated use `DigestTimedMetadata$inboundSchema` instead. */
    export const inboundSchema = DigestTimedMetadata$inboundSchema;
    /** @deprecated use `DigestTimedMetadata$outboundSchema` instead. */
    export const outboundSchema = DigestTimedMetadata$outboundSchema;
    /** @deprecated use `DigestTimedMetadata$Outbound` instead. */
    export type Outbound = DigestTimedMetadata$Outbound;
}
