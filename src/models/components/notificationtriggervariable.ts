/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type NotificationTriggerVariable = {
    name: string;
};

/** @internal */
export const NotificationTriggerVariable$inboundSchema: z.ZodType<
    NotificationTriggerVariable,
    z.ZodTypeDef,
    unknown
> = z.object({
    name: z.string(),
});

/** @internal */
export type NotificationTriggerVariable$Outbound = {
    name: string;
};

/** @internal */
export const NotificationTriggerVariable$outboundSchema: z.ZodType<
    NotificationTriggerVariable$Outbound,
    z.ZodTypeDef,
    NotificationTriggerVariable
> = z.object({
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NotificationTriggerVariable$ {
    /** @deprecated use `NotificationTriggerVariable$inboundSchema` instead. */
    export const inboundSchema = NotificationTriggerVariable$inboundSchema;
    /** @deprecated use `NotificationTriggerVariable$outboundSchema` instead. */
    export const outboundSchema = NotificationTriggerVariable$outboundSchema;
    /** @deprecated use `NotificationTriggerVariable$Outbound` instead. */
    export type Outbound = NotificationTriggerVariable$Outbound;
}
