/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type StepFilter = {};

/** @internal */
export const StepFilter$inboundSchema: z.ZodType<
  StepFilter,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type StepFilter$Outbound = {};

/** @internal */
export const StepFilter$outboundSchema: z.ZodType<
  StepFilter$Outbound,
  z.ZodTypeDef,
  StepFilter
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StepFilter$ {
  /** @deprecated use `StepFilter$inboundSchema` instead. */
  export const inboundSchema = StepFilter$inboundSchema;
  /** @deprecated use `StepFilter$outboundSchema` instead. */
  export const outboundSchema = StepFilter$outboundSchema;
  /** @deprecated use `StepFilter$Outbound` instead. */
  export type Outbound = StepFilter$Outbound;
}

export function stepFilterToJSON(stepFilter: StepFilter): string {
  return JSON.stringify(StepFilter$outboundSchema.parse(stepFilter));
}

export function stepFilterFromJSON(
  jsonString: string,
): SafeParseResult<StepFilter, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StepFilter$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StepFilter' from JSON`,
  );
}
