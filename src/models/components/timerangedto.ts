/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TimeRangeDto = {
  /**
   * Start time
   */
  start: string;
  /**
   * End time
   */
  end: string;
};

/** @internal */
export const TimeRangeDto$inboundSchema: z.ZodType<
  TimeRangeDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  start: z.string(),
  end: z.string(),
});

/** @internal */
export type TimeRangeDto$Outbound = {
  start: string;
  end: string;
};

/** @internal */
export const TimeRangeDto$outboundSchema: z.ZodType<
  TimeRangeDto$Outbound,
  z.ZodTypeDef,
  TimeRangeDto
> = z.object({
  start: z.string(),
  end: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TimeRangeDto$ {
  /** @deprecated use `TimeRangeDto$inboundSchema` instead. */
  export const inboundSchema = TimeRangeDto$inboundSchema;
  /** @deprecated use `TimeRangeDto$outboundSchema` instead. */
  export const outboundSchema = TimeRangeDto$outboundSchema;
  /** @deprecated use `TimeRangeDto$Outbound` instead. */
  export type Outbound = TimeRangeDto$Outbound;
}

export function timeRangeDtoToJSON(timeRangeDto: TimeRangeDto): string {
  return JSON.stringify(TimeRangeDto$outboundSchema.parse(timeRangeDto));
}

export function timeRangeDtoFromJSON(
  jsonString: string,
): SafeParseResult<TimeRangeDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TimeRangeDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TimeRangeDto' from JSON`,
  );
}
