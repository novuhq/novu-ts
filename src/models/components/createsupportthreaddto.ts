/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateSupportThreadDto = {
  text: string;
};

/** @internal */
export const CreateSupportThreadDto$inboundSchema: z.ZodType<
  CreateSupportThreadDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  text: z.string(),
});

/** @internal */
export type CreateSupportThreadDto$Outbound = {
  text: string;
};

/** @internal */
export const CreateSupportThreadDto$outboundSchema: z.ZodType<
  CreateSupportThreadDto$Outbound,
  z.ZodTypeDef,
  CreateSupportThreadDto
> = z.object({
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSupportThreadDto$ {
  /** @deprecated use `CreateSupportThreadDto$inboundSchema` instead. */
  export const inboundSchema = CreateSupportThreadDto$inboundSchema;
  /** @deprecated use `CreateSupportThreadDto$outboundSchema` instead. */
  export const outboundSchema = CreateSupportThreadDto$outboundSchema;
  /** @deprecated use `CreateSupportThreadDto$Outbound` instead. */
  export type Outbound = CreateSupportThreadDto$Outbound;
}

export function createSupportThreadDtoToJSON(
  createSupportThreadDto: CreateSupportThreadDto,
): string {
  return JSON.stringify(
    CreateSupportThreadDto$outboundSchema.parse(createSupportThreadDto),
  );
}

export function createSupportThreadDtoFromJSON(
  jsonString: string,
): SafeParseResult<CreateSupportThreadDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateSupportThreadDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateSupportThreadDto' from JSON`,
  );
}
