/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DelayScheduledMetadataType = {
  Scheduled: "scheduled",
} as const;
export type DelayScheduledMetadataType = ClosedEnum<
  typeof DelayScheduledMetadataType
>;

export type DelayScheduledMetadata = {
  type: DelayScheduledMetadataType;
  delayPath: string;
};

/** @internal */
export const DelayScheduledMetadataType$inboundSchema: z.ZodNativeEnum<
  typeof DelayScheduledMetadataType
> = z.nativeEnum(DelayScheduledMetadataType);

/** @internal */
export const DelayScheduledMetadataType$outboundSchema: z.ZodNativeEnum<
  typeof DelayScheduledMetadataType
> = DelayScheduledMetadataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DelayScheduledMetadataType$ {
  /** @deprecated use `DelayScheduledMetadataType$inboundSchema` instead. */
  export const inboundSchema = DelayScheduledMetadataType$inboundSchema;
  /** @deprecated use `DelayScheduledMetadataType$outboundSchema` instead. */
  export const outboundSchema = DelayScheduledMetadataType$outboundSchema;
}

/** @internal */
export const DelayScheduledMetadata$inboundSchema: z.ZodType<
  DelayScheduledMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: DelayScheduledMetadataType$inboundSchema,
  delayPath: z.string(),
});

/** @internal */
export type DelayScheduledMetadata$Outbound = {
  type: string;
  delayPath: string;
};

/** @internal */
export const DelayScheduledMetadata$outboundSchema: z.ZodType<
  DelayScheduledMetadata$Outbound,
  z.ZodTypeDef,
  DelayScheduledMetadata
> = z.object({
  type: DelayScheduledMetadataType$outboundSchema,
  delayPath: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DelayScheduledMetadata$ {
  /** @deprecated use `DelayScheduledMetadata$inboundSchema` instead. */
  export const inboundSchema = DelayScheduledMetadata$inboundSchema;
  /** @deprecated use `DelayScheduledMetadata$outboundSchema` instead. */
  export const outboundSchema = DelayScheduledMetadata$outboundSchema;
  /** @deprecated use `DelayScheduledMetadata$Outbound` instead. */
  export type Outbound = DelayScheduledMetadata$Outbound;
}

export function delayScheduledMetadataToJSON(
  delayScheduledMetadata: DelayScheduledMetadata,
): string {
  return JSON.stringify(
    DelayScheduledMetadata$outboundSchema.parse(delayScheduledMetadata),
  );
}

export function delayScheduledMetadataFromJSON(
  jsonString: string,
): SafeParseResult<DelayScheduledMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DelayScheduledMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DelayScheduledMetadata' from JSON`,
  );
}
