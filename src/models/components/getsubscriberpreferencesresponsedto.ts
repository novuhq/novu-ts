/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Preference,
  Preference$inboundSchema,
  Preference$Outbound,
  Preference$outboundSchema,
} from "./preference.js";
import {
  TemplateResponse,
  TemplateResponse$inboundSchema,
  TemplateResponse$Outbound,
  TemplateResponse$outboundSchema,
} from "./templateresponse.js";

export type GetSubscriberPreferencesResponseDto = {
  /**
   * The workflow information and if it is critical or not
   */
  template?: TemplateResponse | undefined;
  /**
   * The preferences of the subscriber regarding the related workflow
   */
  preference: Preference;
};

/** @internal */
export const GetSubscriberPreferencesResponseDto$inboundSchema: z.ZodType<
  GetSubscriberPreferencesResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  template: TemplateResponse$inboundSchema.optional(),
  preference: Preference$inboundSchema,
});

/** @internal */
export type GetSubscriberPreferencesResponseDto$Outbound = {
  template?: TemplateResponse$Outbound | undefined;
  preference: Preference$Outbound;
};

/** @internal */
export const GetSubscriberPreferencesResponseDto$outboundSchema: z.ZodType<
  GetSubscriberPreferencesResponseDto$Outbound,
  z.ZodTypeDef,
  GetSubscriberPreferencesResponseDto
> = z.object({
  template: TemplateResponse$outboundSchema.optional(),
  preference: Preference$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSubscriberPreferencesResponseDto$ {
  /** @deprecated use `GetSubscriberPreferencesResponseDto$inboundSchema` instead. */
  export const inboundSchema =
    GetSubscriberPreferencesResponseDto$inboundSchema;
  /** @deprecated use `GetSubscriberPreferencesResponseDto$outboundSchema` instead. */
  export const outboundSchema =
    GetSubscriberPreferencesResponseDto$outboundSchema;
  /** @deprecated use `GetSubscriberPreferencesResponseDto$Outbound` instead. */
  export type Outbound = GetSubscriberPreferencesResponseDto$Outbound;
}

export function getSubscriberPreferencesResponseDtoToJSON(
  getSubscriberPreferencesResponseDto: GetSubscriberPreferencesResponseDto,
): string {
  return JSON.stringify(
    GetSubscriberPreferencesResponseDto$outboundSchema.parse(
      getSubscriberPreferencesResponseDto,
    ),
  );
}

export function getSubscriberPreferencesResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<GetSubscriberPreferencesResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetSubscriberPreferencesResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSubscriberPreferencesResponseDto' from JSON`,
  );
}
