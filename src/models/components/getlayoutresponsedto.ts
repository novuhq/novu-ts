/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const GetLayoutResponseDtoChannel = {
  InApp: "in_app",
  Email: "email",
  Sms: "sms",
  Chat: "chat",
  Push: "push",
} as const;
export type GetLayoutResponseDtoChannel = ClosedEnum<
  typeof GetLayoutResponseDtoChannel
>;

export type GetLayoutResponseDto = {
  creatorId: string;
  environmentId: string;
  id?: string | undefined;
  organizationId: string;
  parentId?: string | undefined;
  channel: GetLayoutResponseDtoChannel;
  content: string;
  contentType: string;
  createdAt?: string | undefined;
  description?: string | undefined;
  identifier: string;
  isDefault: boolean;
  isDeleted: boolean;
  name: string;
  updatedAt?: string | undefined;
  variables?: Array<string> | undefined;
};

/** @internal */
export const GetLayoutResponseDtoChannel$inboundSchema: z.ZodNativeEnum<
  typeof GetLayoutResponseDtoChannel
> = z.nativeEnum(GetLayoutResponseDtoChannel);

/** @internal */
export const GetLayoutResponseDtoChannel$outboundSchema: z.ZodNativeEnum<
  typeof GetLayoutResponseDtoChannel
> = GetLayoutResponseDtoChannel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLayoutResponseDtoChannel$ {
  /** @deprecated use `GetLayoutResponseDtoChannel$inboundSchema` instead. */
  export const inboundSchema = GetLayoutResponseDtoChannel$inboundSchema;
  /** @deprecated use `GetLayoutResponseDtoChannel$outboundSchema` instead. */
  export const outboundSchema = GetLayoutResponseDtoChannel$outboundSchema;
}

/** @internal */
export const GetLayoutResponseDto$inboundSchema: z.ZodType<
  GetLayoutResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  _creatorId: z.string(),
  _environmentId: z.string(),
  _id: z.string().optional(),
  _organizationId: z.string(),
  _parentId: z.string().optional(),
  channel: GetLayoutResponseDtoChannel$inboundSchema,
  content: z.string(),
  contentType: z.string(),
  createdAt: z.string().optional(),
  description: z.string().optional(),
  identifier: z.string(),
  isDefault: z.boolean(),
  isDeleted: z.boolean(),
  name: z.string(),
  updatedAt: z.string().optional(),
  variables: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "_creatorId": "creatorId",
    "_environmentId": "environmentId",
    "_id": "id",
    "_organizationId": "organizationId",
    "_parentId": "parentId",
  });
});

/** @internal */
export type GetLayoutResponseDto$Outbound = {
  _creatorId: string;
  _environmentId: string;
  _id?: string | undefined;
  _organizationId: string;
  _parentId?: string | undefined;
  channel: string;
  content: string;
  contentType: string;
  createdAt?: string | undefined;
  description?: string | undefined;
  identifier: string;
  isDefault: boolean;
  isDeleted: boolean;
  name: string;
  updatedAt?: string | undefined;
  variables?: Array<string> | undefined;
};

/** @internal */
export const GetLayoutResponseDto$outboundSchema: z.ZodType<
  GetLayoutResponseDto$Outbound,
  z.ZodTypeDef,
  GetLayoutResponseDto
> = z.object({
  creatorId: z.string(),
  environmentId: z.string(),
  id: z.string().optional(),
  organizationId: z.string(),
  parentId: z.string().optional(),
  channel: GetLayoutResponseDtoChannel$outboundSchema,
  content: z.string(),
  contentType: z.string(),
  createdAt: z.string().optional(),
  description: z.string().optional(),
  identifier: z.string(),
  isDefault: z.boolean(),
  isDeleted: z.boolean(),
  name: z.string(),
  updatedAt: z.string().optional(),
  variables: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    creatorId: "_creatorId",
    environmentId: "_environmentId",
    id: "_id",
    organizationId: "_organizationId",
    parentId: "_parentId",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetLayoutResponseDto$ {
  /** @deprecated use `GetLayoutResponseDto$inboundSchema` instead. */
  export const inboundSchema = GetLayoutResponseDto$inboundSchema;
  /** @deprecated use `GetLayoutResponseDto$outboundSchema` instead. */
  export const outboundSchema = GetLayoutResponseDto$outboundSchema;
  /** @deprecated use `GetLayoutResponseDto$Outbound` instead. */
  export type Outbound = GetLayoutResponseDto$Outbound;
}
