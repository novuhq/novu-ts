/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The status enum for the performed action
 */
export const Status = {
    Deleted: "deleted",
} as const;
/**
 * The status enum for the performed action
 */
export type Status = ClosedEnum<typeof Status>;

export type DeleteMessageResponseDto = {
    /**
     * A boolean stating the success of the action
     */
    acknowledged: boolean;
    /**
     * The status enum for the performed action
     */
    status: Status;
};

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z.nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> = Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
    /** @deprecated use `Status$inboundSchema` instead. */
    export const inboundSchema = Status$inboundSchema;
    /** @deprecated use `Status$outboundSchema` instead. */
    export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const DeleteMessageResponseDto$inboundSchema: z.ZodType<
    DeleteMessageResponseDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    acknowledged: z.boolean(),
    status: Status$inboundSchema,
});

/** @internal */
export type DeleteMessageResponseDto$Outbound = {
    acknowledged: boolean;
    status: string;
};

/** @internal */
export const DeleteMessageResponseDto$outboundSchema: z.ZodType<
    DeleteMessageResponseDto$Outbound,
    z.ZodTypeDef,
    DeleteMessageResponseDto
> = z.object({
    acknowledged: z.boolean(),
    status: Status$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageResponseDto$ {
    /** @deprecated use `DeleteMessageResponseDto$inboundSchema` instead. */
    export const inboundSchema = DeleteMessageResponseDto$inboundSchema;
    /** @deprecated use `DeleteMessageResponseDto$outboundSchema` instead. */
    export const outboundSchema = DeleteMessageResponseDto$outboundSchema;
    /** @deprecated use `DeleteMessageResponseDto$Outbound` instead. */
    export type Outbound = DeleteMessageResponseDto$Outbound;
}
