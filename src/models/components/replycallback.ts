/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ReplyCallback = {
  /**
   * Indicates whether the reply callback is active.
   */
  active?: boolean | undefined;
  /**
   * The URL to which replies should be sent.
   */
  url?: string | undefined;
};

/** @internal */
export const ReplyCallback$inboundSchema: z.ZodType<
  ReplyCallback,
  z.ZodTypeDef,
  unknown
> = z.object({
  active: z.boolean().optional(),
  url: z.string().optional(),
});

/** @internal */
export type ReplyCallback$Outbound = {
  active?: boolean | undefined;
  url?: string | undefined;
};

/** @internal */
export const ReplyCallback$outboundSchema: z.ZodType<
  ReplyCallback$Outbound,
  z.ZodTypeDef,
  ReplyCallback
> = z.object({
  active: z.boolean().optional(),
  url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReplyCallback$ {
  /** @deprecated use `ReplyCallback$inboundSchema` instead. */
  export const inboundSchema = ReplyCallback$inboundSchema;
  /** @deprecated use `ReplyCallback$outboundSchema` instead. */
  export const outboundSchema = ReplyCallback$outboundSchema;
  /** @deprecated use `ReplyCallback$Outbound` instead. */
  export type Outbound = ReplyCallback$Outbound;
}

export function replyCallbackToJSON(replyCallback: ReplyCallback): string {
  return JSON.stringify(ReplyCallback$outboundSchema.parse(replyCallback));
}

export function replyCallbackFromJSON(
  jsonString: string,
): SafeParseResult<ReplyCallback, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReplyCallback$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReplyCallback' from JSON`,
  );
}
