/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RenameTopicRequestDto = {
  /**
   * User defined custom name and provided by the user to rename the topic.
   */
  name: string;
};

/** @internal */
export const RenameTopicRequestDto$inboundSchema: z.ZodType<
  RenameTopicRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type RenameTopicRequestDto$Outbound = {
  name: string;
};

/** @internal */
export const RenameTopicRequestDto$outboundSchema: z.ZodType<
  RenameTopicRequestDto$Outbound,
  z.ZodTypeDef,
  RenameTopicRequestDto
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicRequestDto$ {
  /** @deprecated use `RenameTopicRequestDto$inboundSchema` instead. */
  export const inboundSchema = RenameTopicRequestDto$inboundSchema;
  /** @deprecated use `RenameTopicRequestDto$outboundSchema` instead. */
  export const outboundSchema = RenameTopicRequestDto$outboundSchema;
  /** @deprecated use `RenameTopicRequestDto$Outbound` instead. */
  export type Outbound = RenameTopicRequestDto$Outbound;
}

export function renameTopicRequestDtoToJSON(
  renameTopicRequestDto: RenameTopicRequestDto,
): string {
  return JSON.stringify(
    RenameTopicRequestDto$outboundSchema.parse(renameTopicRequestDto),
  );
}

export function renameTopicRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<RenameTopicRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RenameTopicRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RenameTopicRequestDto' from JSON`,
  );
}
