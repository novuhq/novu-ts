/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Direction = {
    Ltr: "ltr",
    Trl: "trl",
} as const;
export type Direction = ClosedEnum<typeof Direction>;

export type OrganizationBrandingResponseDto = {
    color: string;
    contentBackground: string;
    direction?: Direction | undefined;
    fontColor: string;
    fontFamily?: string | undefined;
    logo: string;
};

/** @internal */
export const Direction$inboundSchema: z.ZodNativeEnum<typeof Direction> = z.nativeEnum(Direction);

/** @internal */
export const Direction$outboundSchema: z.ZodNativeEnum<typeof Direction> = Direction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Direction$ {
    /** @deprecated use `Direction$inboundSchema` instead. */
    export const inboundSchema = Direction$inboundSchema;
    /** @deprecated use `Direction$outboundSchema` instead. */
    export const outboundSchema = Direction$outboundSchema;
}

/** @internal */
export const OrganizationBrandingResponseDto$inboundSchema: z.ZodType<
    OrganizationBrandingResponseDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    color: z.string(),
    contentBackground: z.string(),
    direction: Direction$inboundSchema.optional(),
    fontColor: z.string(),
    fontFamily: z.string().optional(),
    logo: z.string(),
});

/** @internal */
export type OrganizationBrandingResponseDto$Outbound = {
    color: string;
    contentBackground: string;
    direction?: string | undefined;
    fontColor: string;
    fontFamily?: string | undefined;
    logo: string;
};

/** @internal */
export const OrganizationBrandingResponseDto$outboundSchema: z.ZodType<
    OrganizationBrandingResponseDto$Outbound,
    z.ZodTypeDef,
    OrganizationBrandingResponseDto
> = z.object({
    color: z.string(),
    contentBackground: z.string(),
    direction: Direction$outboundSchema.optional(),
    fontColor: z.string(),
    fontFamily: z.string().optional(),
    logo: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationBrandingResponseDto$ {
    /** @deprecated use `OrganizationBrandingResponseDto$inboundSchema` instead. */
    export const inboundSchema = OrganizationBrandingResponseDto$inboundSchema;
    /** @deprecated use `OrganizationBrandingResponseDto$outboundSchema` instead. */
    export const outboundSchema = OrganizationBrandingResponseDto$outboundSchema;
    /** @deprecated use `OrganizationBrandingResponseDto$Outbound` instead. */
    export type Outbound = OrganizationBrandingResponseDto$Outbound;
}
