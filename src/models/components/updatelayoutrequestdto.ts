/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * User defined variables to render in the layout placeholders.
 */
export type Variables = {};

export type UpdateLayoutRequestDto = {
  /**
   * User defined content for the layout.
   */
  content?: string | undefined;
  /**
   * User defined description of the layout
   */
  description?: string | undefined;
  /**
   * User defined custom key that will be a unique identifier for the Layout updated.
   */
  identifier: string;
  /**
   * Variable that defines if the layout is chosen as default when creating a layout.
   */
  isDefault?: boolean | undefined;
  /**
   * User defined custom name and provided by the user that will name the Layout updated.
   */
  name?: string | undefined;
  /**
   * User defined variables to render in the layout placeholders.
   */
  variables?: Variables | undefined;
};

/** @internal */
export const Variables$inboundSchema: z.ZodType<
  Variables,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type Variables$Outbound = {};

/** @internal */
export const Variables$outboundSchema: z.ZodType<
  Variables$Outbound,
  z.ZodTypeDef,
  Variables
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Variables$ {
  /** @deprecated use `Variables$inboundSchema` instead. */
  export const inboundSchema = Variables$inboundSchema;
  /** @deprecated use `Variables$outboundSchema` instead. */
  export const outboundSchema = Variables$outboundSchema;
  /** @deprecated use `Variables$Outbound` instead. */
  export type Outbound = Variables$Outbound;
}

/** @internal */
export const UpdateLayoutRequestDto$inboundSchema: z.ZodType<
  UpdateLayoutRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.string().optional(),
  description: z.string().optional(),
  identifier: z.string(),
  isDefault: z.boolean().optional(),
  name: z.string().optional(),
  variables: z.lazy(() => Variables$inboundSchema).optional(),
});

/** @internal */
export type UpdateLayoutRequestDto$Outbound = {
  content?: string | undefined;
  description?: string | undefined;
  identifier: string;
  isDefault?: boolean | undefined;
  name?: string | undefined;
  variables?: Variables$Outbound | undefined;
};

/** @internal */
export const UpdateLayoutRequestDto$outboundSchema: z.ZodType<
  UpdateLayoutRequestDto$Outbound,
  z.ZodTypeDef,
  UpdateLayoutRequestDto
> = z.object({
  content: z.string().optional(),
  description: z.string().optional(),
  identifier: z.string(),
  isDefault: z.boolean().optional(),
  name: z.string().optional(),
  variables: z.lazy(() => Variables$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateLayoutRequestDto$ {
  /** @deprecated use `UpdateLayoutRequestDto$inboundSchema` instead. */
  export const inboundSchema = UpdateLayoutRequestDto$inboundSchema;
  /** @deprecated use `UpdateLayoutRequestDto$outboundSchema` instead. */
  export const outboundSchema = UpdateLayoutRequestDto$outboundSchema;
  /** @deprecated use `UpdateLayoutRequestDto$Outbound` instead. */
  export type Outbound = UpdateLayoutRequestDto$Outbound;
}
