/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateUpdateTopicRequestDto = {
  /**
   * The unique key identifier for the topic. The key must contain only alphanumeric characters (a-z, A-Z, 0-9), hyphens (-), underscores (_), colons (:), or be a valid email address.
   */
  key: string;
  /**
   * The display name for the topic
   */
  name?: string | undefined;
};

/** @internal */
export const CreateUpdateTopicRequestDto$inboundSchema: z.ZodType<
  CreateUpdateTopicRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  name: z.string().optional(),
});

/** @internal */
export type CreateUpdateTopicRequestDto$Outbound = {
  key: string;
  name?: string | undefined;
};

/** @internal */
export const CreateUpdateTopicRequestDto$outboundSchema: z.ZodType<
  CreateUpdateTopicRequestDto$Outbound,
  z.ZodTypeDef,
  CreateUpdateTopicRequestDto
> = z.object({
  key: z.string(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateUpdateTopicRequestDto$ {
  /** @deprecated use `CreateUpdateTopicRequestDto$inboundSchema` instead. */
  export const inboundSchema = CreateUpdateTopicRequestDto$inboundSchema;
  /** @deprecated use `CreateUpdateTopicRequestDto$outboundSchema` instead. */
  export const outboundSchema = CreateUpdateTopicRequestDto$outboundSchema;
  /** @deprecated use `CreateUpdateTopicRequestDto$Outbound` instead. */
  export type Outbound = CreateUpdateTopicRequestDto$Outbound;
}

export function createUpdateTopicRequestDtoToJSON(
  createUpdateTopicRequestDto: CreateUpdateTopicRequestDto,
): string {
  return JSON.stringify(
    CreateUpdateTopicRequestDto$outboundSchema.parse(
      createUpdateTopicRequestDto,
    ),
  );
}

export function createUpdateTopicRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<CreateUpdateTopicRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateUpdateTopicRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateUpdateTopicRequestDto' from JSON`,
  );
}
