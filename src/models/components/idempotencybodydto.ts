/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IdempotencyBodyDto = {
  data: number;
};

/** @internal */
export const IdempotencyBodyDto$inboundSchema: z.ZodType<
  IdempotencyBodyDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.number(),
});

/** @internal */
export type IdempotencyBodyDto$Outbound = {
  data: number;
};

/** @internal */
export const IdempotencyBodyDto$outboundSchema: z.ZodType<
  IdempotencyBodyDto$Outbound,
  z.ZodTypeDef,
  IdempotencyBodyDto
> = z.object({
  data: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IdempotencyBodyDto$ {
  /** @deprecated use `IdempotencyBodyDto$inboundSchema` instead. */
  export const inboundSchema = IdempotencyBodyDto$inboundSchema;
  /** @deprecated use `IdempotencyBodyDto$outboundSchema` instead. */
  export const outboundSchema = IdempotencyBodyDto$outboundSchema;
  /** @deprecated use `IdempotencyBodyDto$Outbound` instead. */
  export type Outbound = IdempotencyBodyDto$Outbound;
}

export function idempotencyBodyDtoToJSON(
  idempotencyBodyDto: IdempotencyBodyDto,
): string {
  return JSON.stringify(
    IdempotencyBodyDto$outboundSchema.parse(idempotencyBodyDto),
  );
}

export function idempotencyBodyDtoFromJSON(
  jsonString: string,
): SafeParseResult<IdempotencyBodyDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IdempotencyBodyDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IdempotencyBodyDto' from JSON`,
  );
}
