/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Custom data to associate with this context. Replaces existing data.
 */
export type UpdateContextRequestDtoData = {};

export type UpdateContextRequestDto = {
  /**
   * Custom data to associate with this context. Replaces existing data.
   */
  data: UpdateContextRequestDtoData;
};

/** @internal */
export const UpdateContextRequestDtoData$inboundSchema: z.ZodType<
  UpdateContextRequestDtoData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type UpdateContextRequestDtoData$Outbound = {};

/** @internal */
export const UpdateContextRequestDtoData$outboundSchema: z.ZodType<
  UpdateContextRequestDtoData$Outbound,
  z.ZodTypeDef,
  UpdateContextRequestDtoData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateContextRequestDtoData$ {
  /** @deprecated use `UpdateContextRequestDtoData$inboundSchema` instead. */
  export const inboundSchema = UpdateContextRequestDtoData$inboundSchema;
  /** @deprecated use `UpdateContextRequestDtoData$outboundSchema` instead. */
  export const outboundSchema = UpdateContextRequestDtoData$outboundSchema;
  /** @deprecated use `UpdateContextRequestDtoData$Outbound` instead. */
  export type Outbound = UpdateContextRequestDtoData$Outbound;
}

export function updateContextRequestDtoDataToJSON(
  updateContextRequestDtoData: UpdateContextRequestDtoData,
): string {
  return JSON.stringify(
    UpdateContextRequestDtoData$outboundSchema.parse(
      updateContextRequestDtoData,
    ),
  );
}

export function updateContextRequestDtoDataFromJSON(
  jsonString: string,
): SafeParseResult<UpdateContextRequestDtoData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateContextRequestDtoData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateContextRequestDtoData' from JSON`,
  );
}

/** @internal */
export const UpdateContextRequestDto$inboundSchema: z.ZodType<
  UpdateContextRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => UpdateContextRequestDtoData$inboundSchema),
});

/** @internal */
export type UpdateContextRequestDto$Outbound = {
  data: UpdateContextRequestDtoData$Outbound;
};

/** @internal */
export const UpdateContextRequestDto$outboundSchema: z.ZodType<
  UpdateContextRequestDto$Outbound,
  z.ZodTypeDef,
  UpdateContextRequestDto
> = z.object({
  data: z.lazy(() => UpdateContextRequestDtoData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateContextRequestDto$ {
  /** @deprecated use `UpdateContextRequestDto$inboundSchema` instead. */
  export const inboundSchema = UpdateContextRequestDto$inboundSchema;
  /** @deprecated use `UpdateContextRequestDto$outboundSchema` instead. */
  export const outboundSchema = UpdateContextRequestDto$outboundSchema;
  /** @deprecated use `UpdateContextRequestDto$Outbound` instead. */
  export type Outbound = UpdateContextRequestDto$Outbound;
}

export function updateContextRequestDtoToJSON(
  updateContextRequestDto: UpdateContextRequestDto,
): string {
  return JSON.stringify(
    UpdateContextRequestDto$outboundSchema.parse(updateContextRequestDto),
  );
}

export function updateContextRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<UpdateContextRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateContextRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateContextRequestDto' from JSON`,
  );
}
