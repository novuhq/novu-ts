/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DelayRegularMetadataUnit = {
  Seconds: "seconds",
  Minutes: "minutes",
  Hours: "hours",
  Days: "days",
  Weeks: "weeks",
  Months: "months",
} as const;
export type DelayRegularMetadataUnit = ClosedEnum<
  typeof DelayRegularMetadataUnit
>;

export const DelayRegularMetadataType = {
  Regular: "regular",
} as const;
export type DelayRegularMetadataType = ClosedEnum<
  typeof DelayRegularMetadataType
>;

export type DelayRegularMetadata = {
  amount?: number | undefined;
  unit?: DelayRegularMetadataUnit | undefined;
  type: DelayRegularMetadataType;
};

/** @internal */
export const DelayRegularMetadataUnit$inboundSchema: z.ZodNativeEnum<
  typeof DelayRegularMetadataUnit
> = z.nativeEnum(DelayRegularMetadataUnit);

/** @internal */
export const DelayRegularMetadataUnit$outboundSchema: z.ZodNativeEnum<
  typeof DelayRegularMetadataUnit
> = DelayRegularMetadataUnit$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DelayRegularMetadataUnit$ {
  /** @deprecated use `DelayRegularMetadataUnit$inboundSchema` instead. */
  export const inboundSchema = DelayRegularMetadataUnit$inboundSchema;
  /** @deprecated use `DelayRegularMetadataUnit$outboundSchema` instead. */
  export const outboundSchema = DelayRegularMetadataUnit$outboundSchema;
}

/** @internal */
export const DelayRegularMetadataType$inboundSchema: z.ZodNativeEnum<
  typeof DelayRegularMetadataType
> = z.nativeEnum(DelayRegularMetadataType);

/** @internal */
export const DelayRegularMetadataType$outboundSchema: z.ZodNativeEnum<
  typeof DelayRegularMetadataType
> = DelayRegularMetadataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DelayRegularMetadataType$ {
  /** @deprecated use `DelayRegularMetadataType$inboundSchema` instead. */
  export const inboundSchema = DelayRegularMetadataType$inboundSchema;
  /** @deprecated use `DelayRegularMetadataType$outboundSchema` instead. */
  export const outboundSchema = DelayRegularMetadataType$outboundSchema;
}

/** @internal */
export const DelayRegularMetadata$inboundSchema: z.ZodType<
  DelayRegularMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number().optional(),
  unit: DelayRegularMetadataUnit$inboundSchema.optional(),
  type: DelayRegularMetadataType$inboundSchema,
});

/** @internal */
export type DelayRegularMetadata$Outbound = {
  amount?: number | undefined;
  unit?: string | undefined;
  type: string;
};

/** @internal */
export const DelayRegularMetadata$outboundSchema: z.ZodType<
  DelayRegularMetadata$Outbound,
  z.ZodTypeDef,
  DelayRegularMetadata
> = z.object({
  amount: z.number().optional(),
  unit: DelayRegularMetadataUnit$outboundSchema.optional(),
  type: DelayRegularMetadataType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DelayRegularMetadata$ {
  /** @deprecated use `DelayRegularMetadata$inboundSchema` instead. */
  export const inboundSchema = DelayRegularMetadata$inboundSchema;
  /** @deprecated use `DelayRegularMetadata$outboundSchema` instead. */
  export const outboundSchema = DelayRegularMetadata$outboundSchema;
  /** @deprecated use `DelayRegularMetadata$Outbound` instead. */
  export type Outbound = DelayRegularMetadata$Outbound;
}

export function delayRegularMetadataToJSON(
  delayRegularMetadata: DelayRegularMetadata,
): string {
  return JSON.stringify(
    DelayRegularMetadata$outboundSchema.parse(delayRegularMetadata),
  );
}

export function delayRegularMetadataFromJSON(
  jsonString: string,
): SafeParseResult<DelayRegularMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DelayRegularMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DelayRegularMetadata' from JSON`,
  );
}
