/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The channel type which is overridden
 */
export const Channel = {
  InApp: "in_app",
  Email: "email",
  Sms: "sms",
  Chat: "chat",
  Push: "push",
} as const;
/**
 * The channel type which is overridden
 */
export type Channel = ClosedEnum<typeof Channel>;

/**
 * The source of overrides
 */
export const Source = {
  Subscriber: "subscriber",
  Template: "template",
  WorkflowOverride: "workflowOverride",
} as const;
/**
 * The source of overrides
 */
export type Source = ClosedEnum<typeof Source>;

export type Overrides = {
  /**
   * The channel type which is overridden
   */
  channel: Channel;
  /**
   * The source of overrides
   */
  source: Source;
};

/** @internal */
export const Channel$inboundSchema: z.ZodNativeEnum<typeof Channel> = z
  .nativeEnum(Channel);

/** @internal */
export const Channel$outboundSchema: z.ZodNativeEnum<typeof Channel> =
  Channel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Channel$ {
  /** @deprecated use `Channel$inboundSchema` instead. */
  export const inboundSchema = Channel$inboundSchema;
  /** @deprecated use `Channel$outboundSchema` instead. */
  export const outboundSchema = Channel$outboundSchema;
}

/** @internal */
export const Source$inboundSchema: z.ZodNativeEnum<typeof Source> = z
  .nativeEnum(Source);

/** @internal */
export const Source$outboundSchema: z.ZodNativeEnum<typeof Source> =
  Source$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Source$ {
  /** @deprecated use `Source$inboundSchema` instead. */
  export const inboundSchema = Source$inboundSchema;
  /** @deprecated use `Source$outboundSchema` instead. */
  export const outboundSchema = Source$outboundSchema;
}

/** @internal */
export const Overrides$inboundSchema: z.ZodType<
  Overrides,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel: Channel$inboundSchema,
  source: Source$inboundSchema,
});

/** @internal */
export type Overrides$Outbound = {
  channel: string;
  source: string;
};

/** @internal */
export const Overrides$outboundSchema: z.ZodType<
  Overrides$Outbound,
  z.ZodTypeDef,
  Overrides
> = z.object({
  channel: Channel$outboundSchema,
  source: Source$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Overrides$ {
  /** @deprecated use `Overrides$inboundSchema` instead. */
  export const inboundSchema = Overrides$inboundSchema;
  /** @deprecated use `Overrides$outboundSchema` instead. */
  export const outboundSchema = Overrides$outboundSchema;
  /** @deprecated use `Overrides$Outbound` instead. */
  export type Outbound = Overrides$Outbound;
}

export function overridesToJSON(overrides: Overrides): string {
  return JSON.stringify(Overrides$outboundSchema.parse(overrides));
}

export function overridesFromJSON(
  jsonString: string,
): SafeParseResult<Overrides, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Overrides$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Overrides' from JSON`,
  );
}
