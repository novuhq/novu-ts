/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ActivityNotificationResponseDto,
  ActivityNotificationResponseDto$inboundSchema,
  ActivityNotificationResponseDto$Outbound,
  ActivityNotificationResponseDto$outboundSchema,
} from "./activitynotificationresponsedto.js";

export type ActivitiesResponseDto = {
  /**
   * Indicates if there are more activities in the result set
   */
  hasMore: boolean;
  /**
   * Array of activity notifications
   */
  data: Array<ActivityNotificationResponseDto>;
  /**
   * Page size of the activities
   */
  pageSize: number;
  /**
   * Current page of the activities
   */
  page: number;
};

/** @internal */
export const ActivitiesResponseDto$inboundSchema: z.ZodType<
  ActivitiesResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  hasMore: z.boolean(),
  data: z.array(ActivityNotificationResponseDto$inboundSchema),
  pageSize: z.number(),
  page: z.number(),
});

/** @internal */
export type ActivitiesResponseDto$Outbound = {
  hasMore: boolean;
  data: Array<ActivityNotificationResponseDto$Outbound>;
  pageSize: number;
  page: number;
};

/** @internal */
export const ActivitiesResponseDto$outboundSchema: z.ZodType<
  ActivitiesResponseDto$Outbound,
  z.ZodTypeDef,
  ActivitiesResponseDto
> = z.object({
  hasMore: z.boolean(),
  data: z.array(ActivityNotificationResponseDto$outboundSchema),
  pageSize: z.number(),
  page: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivitiesResponseDto$ {
  /** @deprecated use `ActivitiesResponseDto$inboundSchema` instead. */
  export const inboundSchema = ActivitiesResponseDto$inboundSchema;
  /** @deprecated use `ActivitiesResponseDto$outboundSchema` instead. */
  export const outboundSchema = ActivitiesResponseDto$outboundSchema;
  /** @deprecated use `ActivitiesResponseDto$Outbound` instead. */
  export type Outbound = ActivitiesResponseDto$Outbound;
}

export function activitiesResponseDtoToJSON(
  activitiesResponseDto: ActivitiesResponseDto,
): string {
  return JSON.stringify(
    ActivitiesResponseDto$outboundSchema.parse(activitiesResponseDto),
  );
}

export function activitiesResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<ActivitiesResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ActivitiesResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ActivitiesResponseDto' from JSON`,
  );
}
