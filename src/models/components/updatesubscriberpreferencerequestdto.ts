/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    ChannelPreference,
    ChannelPreference$inboundSchema,
    ChannelPreference$Outbound,
    ChannelPreference$outboundSchema,
} from "./channelpreference.js";
import * as z from "zod";

export type UpdateSubscriberPreferenceRequestDto = {
    /**
     * The subscriber preferences for every ChannelTypeEnum for the workflow assigned.
     */
    channel?: ChannelPreference | undefined;
    /**
     * Sets if the workflow is fully enabled for all channels or not for the subscriber.
     */
    enabled?: boolean | undefined;
};

/** @internal */
export const UpdateSubscriberPreferenceRequestDto$inboundSchema: z.ZodType<
    UpdateSubscriberPreferenceRequestDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    channel: ChannelPreference$inboundSchema.optional(),
    enabled: z.boolean().optional(),
});

/** @internal */
export type UpdateSubscriberPreferenceRequestDto$Outbound = {
    channel?: ChannelPreference$Outbound | undefined;
    enabled?: boolean | undefined;
};

/** @internal */
export const UpdateSubscriberPreferenceRequestDto$outboundSchema: z.ZodType<
    UpdateSubscriberPreferenceRequestDto$Outbound,
    z.ZodTypeDef,
    UpdateSubscriberPreferenceRequestDto
> = z.object({
    channel: ChannelPreference$outboundSchema.optional(),
    enabled: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSubscriberPreferenceRequestDto$ {
    /** @deprecated use `UpdateSubscriberPreferenceRequestDto$inboundSchema` instead. */
    export const inboundSchema = UpdateSubscriberPreferenceRequestDto$inboundSchema;
    /** @deprecated use `UpdateSubscriberPreferenceRequestDto$outboundSchema` instead. */
    export const outboundSchema = UpdateSubscriberPreferenceRequestDto$outboundSchema;
    /** @deprecated use `UpdateSubscriberPreferenceRequestDto$Outbound` instead. */
    export type Outbound = UpdateSubscriberPreferenceRequestDto$Outbound;
}
