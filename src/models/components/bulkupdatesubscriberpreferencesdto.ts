/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BulkUpdateSubscriberPreferenceItemDto,
  BulkUpdateSubscriberPreferenceItemDto$inboundSchema,
  BulkUpdateSubscriberPreferenceItemDto$Outbound,
  BulkUpdateSubscriberPreferenceItemDto$outboundSchema,
} from "./bulkupdatesubscriberpreferenceitemdto.js";

export type BulkUpdateSubscriberPreferencesDto = {
  /**
   * Array of workflow preferences to update (maximum 100 items)
   */
  preferences: Array<BulkUpdateSubscriberPreferenceItemDto>;
};

/** @internal */
export const BulkUpdateSubscriberPreferencesDto$inboundSchema: z.ZodType<
  BulkUpdateSubscriberPreferencesDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  preferences: z.array(BulkUpdateSubscriberPreferenceItemDto$inboundSchema),
});

/** @internal */
export type BulkUpdateSubscriberPreferencesDto$Outbound = {
  preferences: Array<BulkUpdateSubscriberPreferenceItemDto$Outbound>;
};

/** @internal */
export const BulkUpdateSubscriberPreferencesDto$outboundSchema: z.ZodType<
  BulkUpdateSubscriberPreferencesDto$Outbound,
  z.ZodTypeDef,
  BulkUpdateSubscriberPreferencesDto
> = z.object({
  preferences: z.array(BulkUpdateSubscriberPreferenceItemDto$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkUpdateSubscriberPreferencesDto$ {
  /** @deprecated use `BulkUpdateSubscriberPreferencesDto$inboundSchema` instead. */
  export const inboundSchema = BulkUpdateSubscriberPreferencesDto$inboundSchema;
  /** @deprecated use `BulkUpdateSubscriberPreferencesDto$outboundSchema` instead. */
  export const outboundSchema =
    BulkUpdateSubscriberPreferencesDto$outboundSchema;
  /** @deprecated use `BulkUpdateSubscriberPreferencesDto$Outbound` instead. */
  export type Outbound = BulkUpdateSubscriberPreferencesDto$Outbound;
}

export function bulkUpdateSubscriberPreferencesDtoToJSON(
  bulkUpdateSubscriberPreferencesDto: BulkUpdateSubscriberPreferencesDto,
): string {
  return JSON.stringify(
    BulkUpdateSubscriberPreferencesDto$outboundSchema.parse(
      bulkUpdateSubscriberPreferencesDto,
    ),
  );
}

export function bulkUpdateSubscriberPreferencesDtoFromJSON(
  jsonString: string,
): SafeParseResult<BulkUpdateSubscriberPreferencesDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      BulkUpdateSubscriberPreferencesDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkUpdateSubscriberPreferencesDto' from JSON`,
  );
}
