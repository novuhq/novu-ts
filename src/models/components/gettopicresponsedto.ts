/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetTopicResponseDto = {
    environmentId: string;
    id?: string | undefined;
    organizationId: string;
    key: string;
    name: string;
    subscribers: Array<string>;
};

/** @internal */
export const GetTopicResponseDto$inboundSchema: z.ZodType<
    GetTopicResponseDto,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        _environmentId: z.string(),
        _id: z.string().optional(),
        _organizationId: z.string(),
        key: z.string(),
        name: z.string(),
        subscribers: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            _environmentId: "environmentId",
            _id: "id",
            _organizationId: "organizationId",
        });
    });

/** @internal */
export type GetTopicResponseDto$Outbound = {
    _environmentId: string;
    _id?: string | undefined;
    _organizationId: string;
    key: string;
    name: string;
    subscribers: Array<string>;
};

/** @internal */
export const GetTopicResponseDto$outboundSchema: z.ZodType<
    GetTopicResponseDto$Outbound,
    z.ZodTypeDef,
    GetTopicResponseDto
> = z
    .object({
        environmentId: z.string(),
        id: z.string().optional(),
        organizationId: z.string(),
        key: z.string(),
        name: z.string(),
        subscribers: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            environmentId: "_environmentId",
            id: "_id",
            organizationId: "_organizationId",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTopicResponseDto$ {
    /** @deprecated use `GetTopicResponseDto$inboundSchema` instead. */
    export const inboundSchema = GetTopicResponseDto$inboundSchema;
    /** @deprecated use `GetTopicResponseDto$outboundSchema` instead. */
    export const outboundSchema = GetTopicResponseDto$outboundSchema;
    /** @deprecated use `GetTopicResponseDto$Outbound` instead. */
    export type Outbound = GetTopicResponseDto$Outbound;
}
