/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Channels = {
    InApp: "in_app",
    Email: "email",
    Sms: "sms",
    Chat: "chat",
    Push: "push",
} as const;
export type Channels = ClosedEnum<typeof Channels>;

export type ActivityGraphStatesResponse = {
    id: string;
    channels: Array<Channels>;
    count: number;
    templates: Array<string>;
};

/** @internal */
export const Channels$inboundSchema: z.ZodNativeEnum<typeof Channels> = z.nativeEnum(Channels);

/** @internal */
export const Channels$outboundSchema: z.ZodNativeEnum<typeof Channels> = Channels$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Channels$ {
    /** @deprecated use `Channels$inboundSchema` instead. */
    export const inboundSchema = Channels$inboundSchema;
    /** @deprecated use `Channels$outboundSchema` instead. */
    export const outboundSchema = Channels$outboundSchema;
}

/** @internal */
export const ActivityGraphStatesResponse$inboundSchema: z.ZodType<
    ActivityGraphStatesResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        _id: z.string(),
        channels: z.array(Channels$inboundSchema),
        count: z.number(),
        templates: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            _id: "id",
        });
    });

/** @internal */
export type ActivityGraphStatesResponse$Outbound = {
    _id: string;
    channels: Array<string>;
    count: number;
    templates: Array<string>;
};

/** @internal */
export const ActivityGraphStatesResponse$outboundSchema: z.ZodType<
    ActivityGraphStatesResponse$Outbound,
    z.ZodTypeDef,
    ActivityGraphStatesResponse
> = z
    .object({
        id: z.string(),
        channels: z.array(Channels$outboundSchema),
        count: z.number(),
        templates: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            id: "_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivityGraphStatesResponse$ {
    /** @deprecated use `ActivityGraphStatesResponse$inboundSchema` instead. */
    export const inboundSchema = ActivityGraphStatesResponse$inboundSchema;
    /** @deprecated use `ActivityGraphStatesResponse$outboundSchema` instead. */
    export const outboundSchema = ActivityGraphStatesResponse$outboundSchema;
    /** @deprecated use `ActivityGraphStatesResponse$Outbound` instead. */
    export type Outbound = ActivityGraphStatesResponse$Outbound;
}
