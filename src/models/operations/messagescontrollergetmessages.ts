/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const QueryParamChannel = {
    InApp: "in_app",
    Email: "email",
    Sms: "sms",
    Chat: "chat",
    Push: "push",
} as const;
export type QueryParamChannel = ClosedEnum<typeof QueryParamChannel>;

export type MessagesControllerGetMessagesRequest = {
    channel?: QueryParamChannel | undefined;
    subscriberId?: string | undefined;
    transactionId?: Array<string> | undefined;
    page?: number | undefined;
    limit?: number | undefined;
};

/** @internal */
export const QueryParamChannel$inboundSchema: z.ZodNativeEnum<typeof QueryParamChannel> =
    z.nativeEnum(QueryParamChannel);

/** @internal */
export const QueryParamChannel$outboundSchema: z.ZodNativeEnum<typeof QueryParamChannel> =
    QueryParamChannel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryParamChannel$ {
    /** @deprecated use `QueryParamChannel$inboundSchema` instead. */
    export const inboundSchema = QueryParamChannel$inboundSchema;
    /** @deprecated use `QueryParamChannel$outboundSchema` instead. */
    export const outboundSchema = QueryParamChannel$outboundSchema;
}

/** @internal */
export const MessagesControllerGetMessagesRequest$inboundSchema: z.ZodType<
    MessagesControllerGetMessagesRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    channel: QueryParamChannel$inboundSchema.optional(),
    subscriberId: z.string().optional(),
    transactionId: z.array(z.string()).optional(),
    page: z.number().default(0),
    limit: z.number().default(10),
});

/** @internal */
export type MessagesControllerGetMessagesRequest$Outbound = {
    channel?: string | undefined;
    subscriberId?: string | undefined;
    transactionId?: Array<string> | undefined;
    page: number;
    limit: number;
};

/** @internal */
export const MessagesControllerGetMessagesRequest$outboundSchema: z.ZodType<
    MessagesControllerGetMessagesRequest$Outbound,
    z.ZodTypeDef,
    MessagesControllerGetMessagesRequest
> = z.object({
    channel: QueryParamChannel$outboundSchema.optional(),
    subscriberId: z.string().optional(),
    transactionId: z.array(z.string()).optional(),
    page: z.number().default(0),
    limit: z.number().default(10),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessagesControllerGetMessagesRequest$ {
    /** @deprecated use `MessagesControllerGetMessagesRequest$inboundSchema` instead. */
    export const inboundSchema = MessagesControllerGetMessagesRequest$inboundSchema;
    /** @deprecated use `MessagesControllerGetMessagesRequest$outboundSchema` instead. */
    export const outboundSchema = MessagesControllerGetMessagesRequest$outboundSchema;
    /** @deprecated use `MessagesControllerGetMessagesRequest$Outbound` instead. */
    export type Outbound = MessagesControllerGetMessagesRequest$Outbound;
}
