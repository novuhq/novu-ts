/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * the preferences level to be retrieved( Subscriber / Topic)
 */
export const Parameter = {
    Subscriber: "Subscriber",
    Topic: "Topic",
} as const;
/**
 * the preferences level to be retrieved( Subscriber / Topic)
 */
export type Parameter = ClosedEnum<typeof Parameter>;

export type SubscribersControllerGetSubscriberPreferenceByLevelRequest = {
    /**
     * the preferences level to be retrieved( Subscriber / Topic)
     */
    parameter: Parameter;
    subscriberId: string;
};

/** @internal */
export const Parameter$inboundSchema: z.ZodNativeEnum<typeof Parameter> = z.nativeEnum(Parameter);

/** @internal */
export const Parameter$outboundSchema: z.ZodNativeEnum<typeof Parameter> = Parameter$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Parameter$ {
    /** @deprecated use `Parameter$inboundSchema` instead. */
    export const inboundSchema = Parameter$inboundSchema;
    /** @deprecated use `Parameter$outboundSchema` instead. */
    export const outboundSchema = Parameter$outboundSchema;
}

/** @internal */
export const SubscribersControllerGetSubscriberPreferenceByLevelRequest$inboundSchema: z.ZodType<
    SubscribersControllerGetSubscriberPreferenceByLevelRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    parameter: Parameter$inboundSchema,
    subscriberId: z.string(),
});

/** @internal */
export type SubscribersControllerGetSubscriberPreferenceByLevelRequest$Outbound = {
    parameter: string;
    subscriberId: string;
};

/** @internal */
export const SubscribersControllerGetSubscriberPreferenceByLevelRequest$outboundSchema: z.ZodType<
    SubscribersControllerGetSubscriberPreferenceByLevelRequest$Outbound,
    z.ZodTypeDef,
    SubscribersControllerGetSubscriberPreferenceByLevelRequest
> = z.object({
    parameter: Parameter$outboundSchema,
    subscriberId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubscribersControllerGetSubscriberPreferenceByLevelRequest$ {
    /** @deprecated use `SubscribersControllerGetSubscriberPreferenceByLevelRequest$inboundSchema` instead. */
    export const inboundSchema =
        SubscribersControllerGetSubscriberPreferenceByLevelRequest$inboundSchema;
    /** @deprecated use `SubscribersControllerGetSubscriberPreferenceByLevelRequest$outboundSchema` instead. */
    export const outboundSchema =
        SubscribersControllerGetSubscriberPreferenceByLevelRequest$outboundSchema;
    /** @deprecated use `SubscribersControllerGetSubscriberPreferenceByLevelRequest$Outbound` instead. */
    export type Outbound = SubscribersControllerGetSubscriberPreferenceByLevelRequest$Outbound;
}
