/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Direction of the sorting query param
 */
export const OrderBy = {
    Asc: "ASC",
    Desc: "DESC",
} as const;
/**
 * Direction of the sorting query param
 */
export type OrderBy = ClosedEnum<typeof OrderBy>;

export type LayoutsControllerListLayoutsRequest = {
    /**
     * Number of page for pagination
     */
    page?: number | undefined;
    /**
     * Size of page for pagination
     */
    pageSize?: number | undefined;
    /**
     * Sort field. Currently only supported `createdAt`
     */
    sortBy?: string | undefined;
    /**
     * Direction of the sorting query param
     */
    orderBy?: OrderBy | undefined;
};

/** @internal */
export const OrderBy$inboundSchema: z.ZodNativeEnum<typeof OrderBy> = z.nativeEnum(OrderBy);

/** @internal */
export const OrderBy$outboundSchema: z.ZodNativeEnum<typeof OrderBy> = OrderBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrderBy$ {
    /** @deprecated use `OrderBy$inboundSchema` instead. */
    export const inboundSchema = OrderBy$inboundSchema;
    /** @deprecated use `OrderBy$outboundSchema` instead. */
    export const outboundSchema = OrderBy$outboundSchema;
}

/** @internal */
export const LayoutsControllerListLayoutsRequest$inboundSchema: z.ZodType<
    LayoutsControllerListLayoutsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    page: z.number().optional(),
    pageSize: z.number().optional(),
    sortBy: z.string().optional(),
    orderBy: OrderBy$inboundSchema.optional(),
});

/** @internal */
export type LayoutsControllerListLayoutsRequest$Outbound = {
    page?: number | undefined;
    pageSize?: number | undefined;
    sortBy?: string | undefined;
    orderBy?: string | undefined;
};

/** @internal */
export const LayoutsControllerListLayoutsRequest$outboundSchema: z.ZodType<
    LayoutsControllerListLayoutsRequest$Outbound,
    z.ZodTypeDef,
    LayoutsControllerListLayoutsRequest
> = z.object({
    page: z.number().optional(),
    pageSize: z.number().optional(),
    sortBy: z.string().optional(),
    orderBy: OrderBy$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LayoutsControllerListLayoutsRequest$ {
    /** @deprecated use `LayoutsControllerListLayoutsRequest$inboundSchema` instead. */
    export const inboundSchema = LayoutsControllerListLayoutsRequest$inboundSchema;
    /** @deprecated use `LayoutsControllerListLayoutsRequest$outboundSchema` instead. */
    export const outboundSchema = LayoutsControllerListLayoutsRequest$outboundSchema;
    /** @deprecated use `LayoutsControllerListLayoutsRequest$Outbound` instead. */
    export type Outbound = LayoutsControllerListLayoutsRequest$Outbound;
}
