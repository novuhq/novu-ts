/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TopicsControllerDeleteTopicRequest = {
    /**
     * The topic key
     */
    topicKey: string;
};

/** @internal */
export const TopicsControllerDeleteTopicRequest$inboundSchema: z.ZodType<
    TopicsControllerDeleteTopicRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    topicKey: z.string(),
});

/** @internal */
export type TopicsControllerDeleteTopicRequest$Outbound = {
    topicKey: string;
};

/** @internal */
export const TopicsControllerDeleteTopicRequest$outboundSchema: z.ZodType<
    TopicsControllerDeleteTopicRequest$Outbound,
    z.ZodTypeDef,
    TopicsControllerDeleteTopicRequest
> = z.object({
    topicKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TopicsControllerDeleteTopicRequest$ {
    /** @deprecated use `TopicsControllerDeleteTopicRequest$inboundSchema` instead. */
    export const inboundSchema = TopicsControllerDeleteTopicRequest$inboundSchema;
    /** @deprecated use `TopicsControllerDeleteTopicRequest$outboundSchema` instead. */
    export const outboundSchema = TopicsControllerDeleteTopicRequest$outboundSchema;
    /** @deprecated use `TopicsControllerDeleteTopicRequest$Outbound` instead. */
    export type Outbound = TopicsControllerDeleteTopicRequest$Outbound;
}
