/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TenantControllerListTenantsRequest = {
    page?: number | undefined;
    limit?: number | undefined;
};

export type TenantControllerListTenantsResponseBody = {
    data: Array<components.GetTenantResponseDto>;
    /**
     * Does the list have more items to fetch
     */
    hasMore: boolean;
    /**
     * The current page of the paginated response
     */
    page: number;
    /**
     * Number of items on each page
     */
    pageSize: number;
};

export type TenantControllerListTenantsResponse = {
    result: TenantControllerListTenantsResponseBody;
};

/** @internal */
export const TenantControllerListTenantsRequest$inboundSchema: z.ZodType<
    TenantControllerListTenantsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    page: z.number().optional(),
    limit: z.number().default(10),
});

/** @internal */
export type TenantControllerListTenantsRequest$Outbound = {
    page?: number | undefined;
    limit: number;
};

/** @internal */
export const TenantControllerListTenantsRequest$outboundSchema: z.ZodType<
    TenantControllerListTenantsRequest$Outbound,
    z.ZodTypeDef,
    TenantControllerListTenantsRequest
> = z.object({
    page: z.number().optional(),
    limit: z.number().default(10),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TenantControllerListTenantsRequest$ {
    /** @deprecated use `TenantControllerListTenantsRequest$inboundSchema` instead. */
    export const inboundSchema = TenantControllerListTenantsRequest$inboundSchema;
    /** @deprecated use `TenantControllerListTenantsRequest$outboundSchema` instead. */
    export const outboundSchema = TenantControllerListTenantsRequest$outboundSchema;
    /** @deprecated use `TenantControllerListTenantsRequest$Outbound` instead. */
    export type Outbound = TenantControllerListTenantsRequest$Outbound;
}

/** @internal */
export const TenantControllerListTenantsResponseBody$inboundSchema: z.ZodType<
    TenantControllerListTenantsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.array(components.GetTenantResponseDto$inboundSchema),
    hasMore: z.boolean(),
    page: z.number(),
    pageSize: z.number(),
});

/** @internal */
export type TenantControllerListTenantsResponseBody$Outbound = {
    data: Array<components.GetTenantResponseDto$Outbound>;
    hasMore: boolean;
    page: number;
    pageSize: number;
};

/** @internal */
export const TenantControllerListTenantsResponseBody$outboundSchema: z.ZodType<
    TenantControllerListTenantsResponseBody$Outbound,
    z.ZodTypeDef,
    TenantControllerListTenantsResponseBody
> = z.object({
    data: z.array(components.GetTenantResponseDto$outboundSchema),
    hasMore: z.boolean(),
    page: z.number(),
    pageSize: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TenantControllerListTenantsResponseBody$ {
    /** @deprecated use `TenantControllerListTenantsResponseBody$inboundSchema` instead. */
    export const inboundSchema = TenantControllerListTenantsResponseBody$inboundSchema;
    /** @deprecated use `TenantControllerListTenantsResponseBody$outboundSchema` instead. */
    export const outboundSchema = TenantControllerListTenantsResponseBody$outboundSchema;
    /** @deprecated use `TenantControllerListTenantsResponseBody$Outbound` instead. */
    export type Outbound = TenantControllerListTenantsResponseBody$Outbound;
}

/** @internal */
export const TenantControllerListTenantsResponse$inboundSchema: z.ZodType<
    TenantControllerListTenantsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => TenantControllerListTenantsResponseBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type TenantControllerListTenantsResponse$Outbound = {
    Result: TenantControllerListTenantsResponseBody$Outbound;
};

/** @internal */
export const TenantControllerListTenantsResponse$outboundSchema: z.ZodType<
    TenantControllerListTenantsResponse$Outbound,
    z.ZodTypeDef,
    TenantControllerListTenantsResponse
> = z
    .object({
        result: z.lazy(() => TenantControllerListTenantsResponseBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TenantControllerListTenantsResponse$ {
    /** @deprecated use `TenantControllerListTenantsResponse$inboundSchema` instead. */
    export const inboundSchema = TenantControllerListTenantsResponse$inboundSchema;
    /** @deprecated use `TenantControllerListTenantsResponse$outboundSchema` instead. */
    export const outboundSchema = TenantControllerListTenantsResponse$outboundSchema;
    /** @deprecated use `TenantControllerListTenantsResponse$Outbound` instead. */
    export type Outbound = TenantControllerListTenantsResponse$Outbound;
}
