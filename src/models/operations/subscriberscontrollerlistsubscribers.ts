/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type SubscribersControllerListSubscribersRequest = {
    page?: number | undefined;
    limit?: number | undefined;
};

export type SubscribersControllerListSubscribersResponseBody = {
    data: Array<components.SubscriberResponseDto>;
    /**
     * Does the list have more items to fetch
     */
    hasMore: boolean;
    /**
     * The current page of the paginated response
     */
    page: number;
    /**
     * Number of items on each page
     */
    pageSize: number;
};

export type SubscribersControllerListSubscribersResponse = {
    result: SubscribersControllerListSubscribersResponseBody;
};

/** @internal */
export const SubscribersControllerListSubscribersRequest$inboundSchema: z.ZodType<
    SubscribersControllerListSubscribersRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    page: z.number().optional(),
    limit: z.number().default(10),
});

/** @internal */
export type SubscribersControllerListSubscribersRequest$Outbound = {
    page?: number | undefined;
    limit: number;
};

/** @internal */
export const SubscribersControllerListSubscribersRequest$outboundSchema: z.ZodType<
    SubscribersControllerListSubscribersRequest$Outbound,
    z.ZodTypeDef,
    SubscribersControllerListSubscribersRequest
> = z.object({
    page: z.number().optional(),
    limit: z.number().default(10),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubscribersControllerListSubscribersRequest$ {
    /** @deprecated use `SubscribersControllerListSubscribersRequest$inboundSchema` instead. */
    export const inboundSchema = SubscribersControllerListSubscribersRequest$inboundSchema;
    /** @deprecated use `SubscribersControllerListSubscribersRequest$outboundSchema` instead. */
    export const outboundSchema = SubscribersControllerListSubscribersRequest$outboundSchema;
    /** @deprecated use `SubscribersControllerListSubscribersRequest$Outbound` instead. */
    export type Outbound = SubscribersControllerListSubscribersRequest$Outbound;
}

/** @internal */
export const SubscribersControllerListSubscribersResponseBody$inboundSchema: z.ZodType<
    SubscribersControllerListSubscribersResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.array(components.SubscriberResponseDto$inboundSchema),
    hasMore: z.boolean(),
    page: z.number(),
    pageSize: z.number(),
});

/** @internal */
export type SubscribersControllerListSubscribersResponseBody$Outbound = {
    data: Array<components.SubscriberResponseDto$Outbound>;
    hasMore: boolean;
    page: number;
    pageSize: number;
};

/** @internal */
export const SubscribersControllerListSubscribersResponseBody$outboundSchema: z.ZodType<
    SubscribersControllerListSubscribersResponseBody$Outbound,
    z.ZodTypeDef,
    SubscribersControllerListSubscribersResponseBody
> = z.object({
    data: z.array(components.SubscriberResponseDto$outboundSchema),
    hasMore: z.boolean(),
    page: z.number(),
    pageSize: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubscribersControllerListSubscribersResponseBody$ {
    /** @deprecated use `SubscribersControllerListSubscribersResponseBody$inboundSchema` instead. */
    export const inboundSchema = SubscribersControllerListSubscribersResponseBody$inboundSchema;
    /** @deprecated use `SubscribersControllerListSubscribersResponseBody$outboundSchema` instead. */
    export const outboundSchema = SubscribersControllerListSubscribersResponseBody$outboundSchema;
    /** @deprecated use `SubscribersControllerListSubscribersResponseBody$Outbound` instead. */
    export type Outbound = SubscribersControllerListSubscribersResponseBody$Outbound;
}

/** @internal */
export const SubscribersControllerListSubscribersResponse$inboundSchema: z.ZodType<
    SubscribersControllerListSubscribersResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Result: z.lazy(() => SubscribersControllerListSubscribersResponseBody$inboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            Result: "result",
        });
    });

/** @internal */
export type SubscribersControllerListSubscribersResponse$Outbound = {
    Result: SubscribersControllerListSubscribersResponseBody$Outbound;
};

/** @internal */
export const SubscribersControllerListSubscribersResponse$outboundSchema: z.ZodType<
    SubscribersControllerListSubscribersResponse$Outbound,
    z.ZodTypeDef,
    SubscribersControllerListSubscribersResponse
> = z
    .object({
        result: z.lazy(() => SubscribersControllerListSubscribersResponseBody$outboundSchema),
    })
    .transform((v) => {
        return remap$(v, {
            result: "Result",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubscribersControllerListSubscribersResponse$ {
    /** @deprecated use `SubscribersControllerListSubscribersResponse$inboundSchema` instead. */
    export const inboundSchema = SubscribersControllerListSubscribersResponse$inboundSchema;
    /** @deprecated use `SubscribersControllerListSubscribersResponse$outboundSchema` instead. */
    export const outboundSchema = SubscribersControllerListSubscribersResponse$outboundSchema;
    /** @deprecated use `SubscribersControllerListSubscribersResponse$Outbound` instead. */
    export type Outbound = SubscribersControllerListSubscribersResponse$Outbound;
}
