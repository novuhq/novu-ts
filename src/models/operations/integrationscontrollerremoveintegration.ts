/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type IntegrationsControllerRemoveIntegrationRequest = {
    integrationId: string;
};

/** @internal */
export const IntegrationsControllerRemoveIntegrationRequest$inboundSchema: z.ZodType<
    IntegrationsControllerRemoveIntegrationRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    integrationId: z.string(),
});

/** @internal */
export type IntegrationsControllerRemoveIntegrationRequest$Outbound = {
    integrationId: string;
};

/** @internal */
export const IntegrationsControllerRemoveIntegrationRequest$outboundSchema: z.ZodType<
    IntegrationsControllerRemoveIntegrationRequest$Outbound,
    z.ZodTypeDef,
    IntegrationsControllerRemoveIntegrationRequest
> = z.object({
    integrationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IntegrationsControllerRemoveIntegrationRequest$ {
    /** @deprecated use `IntegrationsControllerRemoveIntegrationRequest$inboundSchema` instead. */
    export const inboundSchema = IntegrationsControllerRemoveIntegrationRequest$inboundSchema;
    /** @deprecated use `IntegrationsControllerRemoveIntegrationRequest$outboundSchema` instead. */
    export const outboundSchema = IntegrationsControllerRemoveIntegrationRequest$outboundSchema;
    /** @deprecated use `IntegrationsControllerRemoveIntegrationRequest$Outbound` instead. */
    export type Outbound = IntegrationsControllerRemoveIntegrationRequest$Outbound;
}
