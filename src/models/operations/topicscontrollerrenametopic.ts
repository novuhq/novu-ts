/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type TopicsControllerRenameTopicRequest = {
    /**
     * The topic key
     */
    topicKey: string;
    renameTopicRequestDto: components.RenameTopicRequestDto;
};

/** @internal */
export const TopicsControllerRenameTopicRequest$inboundSchema: z.ZodType<
    TopicsControllerRenameTopicRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        topicKey: z.string(),
        RenameTopicRequestDto: components.RenameTopicRequestDto$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            RenameTopicRequestDto: "renameTopicRequestDto",
        });
    });

/** @internal */
export type TopicsControllerRenameTopicRequest$Outbound = {
    topicKey: string;
    RenameTopicRequestDto: components.RenameTopicRequestDto$Outbound;
};

/** @internal */
export const TopicsControllerRenameTopicRequest$outboundSchema: z.ZodType<
    TopicsControllerRenameTopicRequest$Outbound,
    z.ZodTypeDef,
    TopicsControllerRenameTopicRequest
> = z
    .object({
        topicKey: z.string(),
        renameTopicRequestDto: components.RenameTopicRequestDto$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            renameTopicRequestDto: "RenameTopicRequestDto",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TopicsControllerRenameTopicRequest$ {
    /** @deprecated use `TopicsControllerRenameTopicRequest$inboundSchema` instead. */
    export const inboundSchema = TopicsControllerRenameTopicRequest$inboundSchema;
    /** @deprecated use `TopicsControllerRenameTopicRequest$outboundSchema` instead. */
    export const outboundSchema = TopicsControllerRenameTopicRequest$outboundSchema;
    /** @deprecated use `TopicsControllerRenameTopicRequest$Outbound` instead. */
    export type Outbound = TopicsControllerRenameTopicRequest$Outbound;
}
