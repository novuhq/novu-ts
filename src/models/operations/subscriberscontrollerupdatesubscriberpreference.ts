/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type SubscribersControllerUpdateSubscriberPreferenceRequest = {
    subscriberId: string;
    parameter: string;
    updateSubscriberPreferenceRequestDto: components.UpdateSubscriberPreferenceRequestDto;
};

/** @internal */
export const SubscribersControllerUpdateSubscriberPreferenceRequest$inboundSchema: z.ZodType<
    SubscribersControllerUpdateSubscriberPreferenceRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        subscriberId: z.string(),
        parameter: z.string(),
        UpdateSubscriberPreferenceRequestDto:
            components.UpdateSubscriberPreferenceRequestDto$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            UpdateSubscriberPreferenceRequestDto: "updateSubscriberPreferenceRequestDto",
        });
    });

/** @internal */
export type SubscribersControllerUpdateSubscriberPreferenceRequest$Outbound = {
    subscriberId: string;
    parameter: string;
    UpdateSubscriberPreferenceRequestDto: components.UpdateSubscriberPreferenceRequestDto$Outbound;
};

/** @internal */
export const SubscribersControllerUpdateSubscriberPreferenceRequest$outboundSchema: z.ZodType<
    SubscribersControllerUpdateSubscriberPreferenceRequest$Outbound,
    z.ZodTypeDef,
    SubscribersControllerUpdateSubscriberPreferenceRequest
> = z
    .object({
        subscriberId: z.string(),
        parameter: z.string(),
        updateSubscriberPreferenceRequestDto:
            components.UpdateSubscriberPreferenceRequestDto$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            updateSubscriberPreferenceRequestDto: "UpdateSubscriberPreferenceRequestDto",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubscribersControllerUpdateSubscriberPreferenceRequest$ {
    /** @deprecated use `SubscribersControllerUpdateSubscriberPreferenceRequest$inboundSchema` instead. */
    export const inboundSchema =
        SubscribersControllerUpdateSubscriberPreferenceRequest$inboundSchema;
    /** @deprecated use `SubscribersControllerUpdateSubscriberPreferenceRequest$outboundSchema` instead. */
    export const outboundSchema =
        SubscribersControllerUpdateSubscriberPreferenceRequest$outboundSchema;
    /** @deprecated use `SubscribersControllerUpdateSubscriberPreferenceRequest$Outbound` instead. */
    export type Outbound = SubscribersControllerUpdateSubscriberPreferenceRequest$Outbound;
}
